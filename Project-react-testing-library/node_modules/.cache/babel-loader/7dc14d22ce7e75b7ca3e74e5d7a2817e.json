{"ast":null,"code":"var _jsxFileName = \"/home/phlopes/Projetos/sd-010-a-project-react-testing-library/src/components/Pokedex.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isPokemonFavoriteByIdType, pokemonType } from '../types';\nimport Button from './Button';\nimport Pokemon from './Pokemon';\nimport './pokedex.css';\n\nclass Pokedex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemonIndex: 0,\n      filteredType: 'all'\n    };\n  }\n\n  filterPokemons(filteredType) {\n    this.setState({\n      filteredType,\n      pokemonIndex: 0\n    });\n  }\n\n  nextPokemon(numberOfPokemons) {\n    this.setState(state => ({\n      pokemonIndex: (state.pokemonIndex + 1) % numberOfPokemons\n    }));\n  }\n\n  fetchFilteredPokemons() {\n    const {\n      pokemons\n    } = this.props;\n    const {\n      filteredType\n    } = this.state;\n    return pokemons.filter(pokemon => {\n      if (filteredType === 'all') return true;\n      return pokemon.type === filteredType;\n    });\n  }\n\n  fetchPokemonTypes() {\n    const {\n      pokemons\n    } = this.props;\n    return [...new Set(pokemons.reduce((types, {\n      type\n    }) => [...types, type], []))];\n  }\n\n  renderPokemonButtonsPanel() {\n    const pokemonTypes = this.fetchPokemonTypes();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pokedex-buttons-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.filterPokemons('all'),\n      className: \"filter-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, `All`), pokemonTypes.map(type => /*#__PURE__*/React.createElement(Button, {\n      dataTestId: `pokemon-type-button`,\n      key: type,\n      onClick: () => this.filterPokemons(type),\n      className: \"filter-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, `${type}`)));\n  }\n\n  render() {\n    const {\n      isPokemonFavoriteById\n    } = this.props;\n    const filteredPokemons = this.fetchFilteredPokemons();\n    const {\n      pokemonIndex\n    } = this.state;\n    const pokemon = filteredPokemons[pokemonIndex];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pokedex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, `Encountered pokémons`), /*#__PURE__*/React.createElement(Pokemon, {\n      pokemon: pokemon,\n      isFavorite: isPokemonFavoriteById[pokemon.id],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), this.renderPokemonButtonsPanel(), /*#__PURE__*/React.createElement(Button, {\n      dataTestId: \"next-pokemon\",\n      className: \"pokedex-button\",\n      onClick: () => this.nextPokemon(filteredPokemons.length),\n      disabled: filteredPokemons.length <= 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, `Próximo pokémon`));\n  }\n\n}\n\nPokedex.propTypes = {\n  isPokemonFavoriteById: isPokemonFavoriteByIdType.isRequired,\n  pokemons: PropTypes.arrayOf(pokemonType.isRequired).isRequired\n};\nexport default Pokedex;","map":{"version":3,"sources":["/home/phlopes/Projetos/sd-010-a-project-react-testing-library/src/components/Pokedex.js"],"names":["React","PropTypes","isPokemonFavoriteByIdType","pokemonType","Button","Pokemon","Pokedex","Component","constructor","props","state","pokemonIndex","filteredType","filterPokemons","setState","nextPokemon","numberOfPokemons","fetchFilteredPokemons","pokemons","filter","pokemon","type","fetchPokemonTypes","Set","reduce","types","renderPokemonButtonsPanel","pokemonTypes","map","render","isPokemonFavoriteById","filteredPokemons","id","length","propTypes","isRequired","arrayOf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isPokemonFavoriteByIdType, pokemonType } from '../types';\nimport Button from './Button';\nimport Pokemon from './Pokemon';\nimport './pokedex.css';\n\nclass Pokedex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { pokemonIndex: 0, filteredType: 'all' };\n  }\n\n  filterPokemons(filteredType) {\n    this.setState({ filteredType, pokemonIndex: 0 });\n  }\n\n  nextPokemon(numberOfPokemons) {\n    this.setState((state) => (\n      { pokemonIndex: (state.pokemonIndex + 1) % numberOfPokemons }\n    ));\n  }\n\n  fetchFilteredPokemons() {\n    const { pokemons } = this.props;\n    const { filteredType } = this.state;\n\n    return pokemons.filter((pokemon) => {\n      if (filteredType === 'all') return true;\n      return pokemon.type === filteredType;\n    });\n  }\n\n  fetchPokemonTypes() {\n    const { pokemons } = this.props;\n\n    return [...new Set(pokemons.reduce((types, { type }) => [...types, type], []))];\n  }\n\n  renderPokemonButtonsPanel() {\n    const pokemonTypes = this.fetchPokemonTypes();\n\n    return (\n      <div className=\"pokedex-buttons-panel\">\n        <Button\n          onClick={ () => this.filterPokemons('all') }\n          className=\"filter-button\"\n        >\n          {`All`}\n        </Button>\n        {pokemonTypes.map((type) => (\n          <Button\n            dataTestId={`pokemon-type-button`}\n            key={ type }\n            onClick={ () => this.filterPokemons(type) }\n            className=\"filter-button\"\n          >\n            {`${type}`}\n          </Button>\n        ))}\n      </div>\n    );\n  }\n\n  render() {\n    const { isPokemonFavoriteById } = this.props;\n    const filteredPokemons = this.fetchFilteredPokemons();\n    const { pokemonIndex } = this.state;\n    const pokemon = filteredPokemons[pokemonIndex];\n\n    return (\n      <div className=\"pokedex\">\n        <h2>{`Encountered pokémons`}</h2>\n        <Pokemon\n          pokemon={ pokemon }\n          isFavorite={ isPokemonFavoriteById[pokemon.id] }\n        />\n        {this.renderPokemonButtonsPanel()}\n        <Button\n          dataTestId=\"next-pokemon\"\n          className=\"pokedex-button\"\n          onClick={ () => this.nextPokemon(filteredPokemons.length) }\n          disabled={ filteredPokemons.length <= 1 }\n        >\n          {`Próximo pokémon`}\n        </Button>\n      </div>\n    );\n  }\n}\n\nPokedex.propTypes = {\n  isPokemonFavoriteById: isPokemonFavoriteByIdType.isRequired,\n  pokemons: PropTypes.arrayOf(pokemonType.isRequired).isRequired,\n};\n\nexport default Pokedex;\n"]},"metadata":{},"sourceType":"module"}