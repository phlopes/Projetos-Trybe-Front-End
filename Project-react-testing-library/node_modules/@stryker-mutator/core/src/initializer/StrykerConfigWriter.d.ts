import { StrykerOptions } from '@stryker-mutator/api/core';
import { Logger } from '@stryker-mutator/api/logging';
import PresetConfiguration from './presets/PresetConfiguration';
import PromptOption from './PromptOption';
export default class StrykerConfigWriter {
    private readonly log;
    private readonly out;
    static inject: ["logger", "out"];
    constructor(log: Logger, out: typeof console.log);
    guardForExistingConfig(): void;
    private checkIfConfigFileExists;
    /**
     * Create config based on the chosen framework and test runner
     * @function
     */
    write(selectedTestRunner: null | PromptOption, selectedTestFramework: null | PromptOption, selectedMutator: null | PromptOption, selectedTranspilers: null | PromptOption[], selectedReporters: PromptOption[], selectedPackageManager: PromptOption, additionalPiecesOfConfig: Array<Partial<StrykerOptions>>, exportAsJson: boolean): Promise<string>;
    /**
     * Create config based on the chosen preset
     * @function
     */
    writePreset(presetConfig: PresetConfiguration, exportAsJson: boolean): Promise<string>;
    private configureTestFramework;
    private writeStrykerConfig;
    private writeJsConfig;
    private writeJsonConfig;
    private stringify;
}
//# sourceMappingURL=StrykerConfigWriter.d.ts.map