{"ast":null,"code":"var _jsxFileName = \"/home/phlopes/Projetos/sd-010-a-project-recipes-app/src/pages/RecipesFavorite/index.js\";\nimport React, { useState } from 'react';\nimport copy from 'clipboard-copy';\nimport { Link } from 'react-router-dom';\nimport shareIcon from \"../../images/shareIcon.svg\";\nimport blackHeartIcon from \"../../images/blackHeartIcon.svg\";\nimport './index.css';\nexport default function RecipesFavorite() {\n  const favoriteRecipes = [{\n    id: '52771',\n    type: 'comida',\n    area: 'Italian',\n    category: 'Vegetarian',\n    alcoholicOrNot: '',\n    name: 'Spicy Arrabiata Penne',\n    image: 'https://www.themealdb.com/images/media/meals/ustsqw1468250014.jpg'\n  }, {\n    id: '178319',\n    type: 'bebida',\n    area: '',\n    category: 'Cocktail',\n    alcoholicOrNot: 'Alcoholic',\n    name: 'Aquamarine',\n    image: 'https://www.thecocktaildb.com/images/media/drink/zvsre31572902738.jpg'\n  }];\n  localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n  const [filterRecipes, setFilterRecipes] = useState(favoriteRecipes);\n  const [clipBoardFood, setClipBoardFood] = useState(false);\n  const [clipBoardDrink, setClipBoardDrink] = useState(false);\n\n  function buttonsFilters(param) {\n    if (param === 'all') {\n      setFilterRecipes(favoriteRecipes.filter(({\n        type\n      }) => type));\n    }\n\n    if (param === 'food') {\n      setFilterRecipes(favoriteRecipes.filter(({\n        type\n      }) => type === 'comida'));\n    }\n\n    if (param === 'drinks') {\n      setFilterRecipes(favoriteRecipes.filter(({\n        type\n      }) => type === 'bebida'));\n    }\n  }\n\n  function clipBoard(type, id) {\n    copy(`http://localhost:3000/${type}s/${id}`);\n\n    if (type === 'comida') {\n      setClipBoardFood(true);\n    }\n\n    if (type === 'bebida') {\n      setClipBoardDrink(true);\n    }\n  }\n\n  function removeFavorite(target, idItem) {\n    const item = target.parentNode.parentNode;\n    item.remove();\n    const obj = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newObj = obj.filter(({\n      id\n    }) => id !== idItem);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newObj));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"filter-by-all-btn\",\n    onClick: () => buttonsFilters('all'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"filter-by-food-btn\",\n    onClick: () => buttonsFilters('food'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Food\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"filter-by-drink-btn\",\n    onClick: () => buttonsFilters('drinks'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Drinks\")), filterRecipes.map(({\n    id,\n    image,\n    category,\n    name,\n    type,\n    area,\n    alcoholicOrNot\n  }, index) => type === 'comida' ? /*#__PURE__*/React.createElement(\"div\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: \"150px\",\n    src: image,\n    alt: \"imagem-receive\",\n    \"data-testid\": `${index}-horizontal-image`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, `${area} - ${category}`), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => clipBoard(type, id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    src: shareIcon,\n    alt: \"share button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: ({\n      target\n    }) => removeFavorite(target, id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-favorite-btn`,\n    src: blackHeartIcon,\n    alt: \"favorite button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"spam\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, clipBoardFood === true ? 'Link copiado!' : null)) : /*#__PURE__*/React.createElement(\"div\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: \"150px\",\n    src: image,\n    alt: \"imagem-receive\",\n    \"data-testid\": `${index}-horizontal-image`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, alcoholicOrNot), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => clipBoard(type, id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    src: shareIcon,\n    alt: \"share button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: ({\n      target\n    }) => removeFavorite(target, id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-favorite-btn`,\n    src: blackHeartIcon,\n    alt: \"favorite button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"spam\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 19\n    }\n  }, clipBoardDrink === true ? 'Link copiado!' : null))));\n}","map":{"version":3,"sources":["/home/phlopes/Projetos/sd-010-a-project-recipes-app/src/pages/RecipesFavorite/index.js"],"names":["React","useState","copy","Link","RecipesFavorite","favoriteRecipes","id","type","area","category","alcoholicOrNot","name","image","localStorage","setItem","JSON","stringify","filterRecipes","setFilterRecipes","clipBoardFood","setClipBoardFood","clipBoardDrink","setClipBoardDrink","buttonsFilters","param","filter","clipBoard","removeFavorite","target","idItem","item","parentNode","remove","obj","parse","getItem","newObj","map","index","shareIcon","blackHeartIcon"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport copy from 'clipboard-copy';\nimport { Link } from 'react-router-dom';\nimport shareIcon from '../../images/shareIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport './index.css';\n\nexport default function RecipesFavorite() {\n  const favoriteRecipes = [\n    {\n      id: '52771',\n      type: 'comida',\n      area: 'Italian',\n      category: 'Vegetarian',\n      alcoholicOrNot: '',\n      name: 'Spicy Arrabiata Penne',\n      image: 'https://www.themealdb.com/images/media/meals/ustsqw1468250014.jpg',\n    },\n    {\n      id: '178319',\n      type: 'bebida',\n      area: '',\n      category: 'Cocktail',\n      alcoholicOrNot: 'Alcoholic',\n      name: 'Aquamarine',\n      image: 'https://www.thecocktaildb.com/images/media/drink/zvsre31572902738.jpg',\n    },\n  ];\n\n  localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n\n  const [filterRecipes, setFilterRecipes] = useState(favoriteRecipes);\n  const [clipBoardFood, setClipBoardFood] = useState(false);\n  const [clipBoardDrink, setClipBoardDrink] = useState(false);\n\n  function buttonsFilters(param) {\n    if (param === 'all') {\n      setFilterRecipes(favoriteRecipes.filter(({ type }) => type));\n    }\n    if (param === 'food') {\n      setFilterRecipes(favoriteRecipes.filter(({ type }) => type === 'comida'));\n    } if (param === 'drinks') {\n      setFilterRecipes(favoriteRecipes.filter(({ type }) => type === 'bebida'));\n    }\n  }\n\n  function clipBoard(type, id) {\n    copy(`http://localhost:3000/${type}s/${id}`);\n    if (type === 'comida') {\n      setClipBoardFood(true);\n    } if (type === 'bebida') {\n      setClipBoardDrink(true);\n    }\n  }\n\n  function removeFavorite(target, idItem) {\n    const item = target.parentNode.parentNode;\n    item.remove();\n    const obj = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newObj = obj.filter(({ id }) => id !== idItem);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newObj));\n  }\n\n  return (\n    <>\n      <nav>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          onClick={ () => buttonsFilters('all') }\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          onClick={ () => buttonsFilters('food') }\n        >\n          Food\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          onClick={ () => buttonsFilters('drinks') }\n        >\n          Drinks\n        </button>\n      </nav>\n      {filterRecipes\n        .map(\n          ({ id, image, category, name, type,\n            area, alcoholicOrNot }, index) => (\n            type === 'comida'\n              ? (\n                <div\n                  key={ id }\n                >\n                  <Link to={ `/${type}s/${id}` }>\n                    <img\n                      width=\"150px\"\n                      src={ image }\n                      alt=\"imagem-receive\"\n                      data-testid={ `${index}-horizontal-image` }\n                    />\n                    <p data-testid={ `${index}-horizontal-name` }>{name}</p>\n                  </Link>\n                  <p data-testid={ `${index}-horizontal-top-text` }>\n                    {`${area} - ${category}`}\n                  </p>\n                  <button type=\"button\" onClick={ () => clipBoard(type, id) }>\n                    <img\n                      data-testid={ `${index}-horizontal-share-btn` }\n                      src={ shareIcon }\n                      alt=\"share button\"\n                    />\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={ ({ target }) => removeFavorite(target, id) }\n                  >\n                    <img\n                      data-testid={ `${index}-horizontal-favorite-btn` }\n                      src={ blackHeartIcon }\n                      alt=\"favorite button\"\n                    />\n                  </button>\n                  <spam>{clipBoardFood === true ? 'Link copiado!' : null}</spam>\n                </div>)\n              : (\n                <div key={ id }>\n                  <Link to={ `/${type}s/${id}` }>\n                    <img\n                      width=\"150px\"\n                      src={ image }\n                      alt=\"imagem-receive\"\n                      data-testid={ `${index}-horizontal-image` }\n                    />\n                    <p data-testid={ `${index}-horizontal-name` }>{name}</p>\n                  </Link>\n                  <p data-testid={ `${index}-horizontal-top-text` }>{alcoholicOrNot}</p>\n                  <button type=\"button\" onClick={ () => clipBoard(type, id) }>\n                    <img\n                      data-testid={ `${index}-horizontal-share-btn` }\n                      src={ shareIcon }\n                      alt=\"share button\"\n                    />\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={ ({ target }) => removeFavorite(target, id) }\n                  >\n                    <img\n                      data-testid={ `${index}-horizontal-favorite-btn` }\n                      src={ blackHeartIcon }\n                      alt=\"favorite button\"\n                    />\n                  </button>\n                  <spam>{clipBoardDrink === true ? 'Link copiado!' : null}</spam>\n                </div>)\n          ),\n        )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}