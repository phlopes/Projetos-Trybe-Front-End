{"ast":null,"code":"var _jsxFileName = \"/home/phlopes/Projetos/sd-010-a-project-recipes-app/src/pages/RecipesFavorite/index.js\";\nimport React, { useState } from 'react';\nimport copy from 'clipboard-copy';\nimport { Link } from 'react-router-dom';\nimport shareIcon from \"../../images/shareIcon.svg\";\nimport blackHeartIcon from \"../../images/blackHeartIcon.svg\";\nimport './index.css';\nimport Header from '../../components/header';\nexport default function RecipesFavorites() {\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const [filterRecipes, setFilterRecipes] = useState(favoriteRecipes);\n  const [clipBoardFood, setClipBoardFood] = useState(false);\n  const [clipBoardDrink, setClipBoardDrink] = useState(false);\n\n  function buttonsFilters(param) {\n    if (param === 'all') {\n      setFilterRecipes(favoriteRecipes && favoriteRecipes.filter(({\n        type\n      }) => type));\n    }\n\n    if (param === 'food') {\n      setFilterRecipes(favoriteRecipes && favoriteRecipes.filter(({\n        type\n      }) => type === 'comida'));\n    }\n\n    if (param === 'drinks') {\n      setFilterRecipes(favoriteRecipes && favoriteRecipes.filter(({\n        type\n      }) => type === 'bebida'));\n    }\n  }\n\n  function clipBoard(type, id) {\n    copy(`http://localhost:3000/${type}s/${id}`);\n\n    if (type === 'comida') {\n      setClipBoardFood(true);\n    }\n\n    if (type === 'bebida') {\n      setClipBoardDrink(true);\n    }\n  }\n\n  function removeFavorite(target, idItem) {\n    const item = document.getElementById('container-favorite');\n    item.remove();\n    const obj = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newObj = obj.filter(({\n      id\n    }) => id !== idItem);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newObj));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    title: \"Receitas Favoritas\",\n    isSearch: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"filter-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"filter-by-all-btn\",\n    onClick: () => buttonsFilters('all'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"filter-by-food-btn\",\n    onClick: () => buttonsFilters('food'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Food\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"filter-by-drink-btn\",\n    onClick: () => buttonsFilters('drinks'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Drinks\")), filterRecipes && filterRecipes.map(({\n    id,\n    image,\n    category,\n    name,\n    type,\n    area,\n    alcoholicOrNot\n  }, index) => type === 'comida' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-favorite\",\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"images\",\n    src: image,\n    alt: \"imagem-receive\",\n    \"data-testid\": `${index}-horizontal-image`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"recipe-name\",\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, `${area} - ${category}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons-share-favorite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => clipBoard(type, id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    src: shareIcon,\n    alt: \"share button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: ({\n      target\n    }) => removeFavorite(target, id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-favorite-btn`,\n    src: blackHeartIcon,\n    alt: \"favorite button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"spam\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, clipBoardFood === true ? 'Link copiado!' : null))) : /*#__PURE__*/React.createElement(\"div\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"images\",\n    src: image,\n    alt: \"imagem-receive\",\n    \"data-testid\": `${index}-horizontal-image`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, alcoholicOrNot), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => clipBoard(type, id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    src: shareIcon,\n    alt: \"share button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: ({\n      target\n    }) => removeFavorite(target, id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-favorite-btn`,\n    src: blackHeartIcon,\n    alt: \"favorite button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"spam\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }, clipBoardDrink === true ? 'Link copiado!' : null))));\n}","map":{"version":3,"sources":["/home/phlopes/Projetos/sd-010-a-project-recipes-app/src/pages/RecipesFavorite/index.js"],"names":["React","useState","copy","Link","Header","RecipesFavorites","favoriteRecipes","JSON","parse","localStorage","getItem","filterRecipes","setFilterRecipes","clipBoardFood","setClipBoardFood","clipBoardDrink","setClipBoardDrink","buttonsFilters","param","filter","type","clipBoard","id","removeFavorite","target","idItem","item","document","getElementById","remove","obj","newObj","setItem","stringify","map","image","category","name","area","alcoholicOrNot","index","shareIcon","blackHeartIcon"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport copy from 'clipboard-copy';\nimport { Link } from 'react-router-dom';\nimport shareIcon from '../../images/shareIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport './index.css';\nimport Header from '../../components/header';\n\nexport default function RecipesFavorites() {\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n  const [filterRecipes, setFilterRecipes] = useState(favoriteRecipes);\n  const [clipBoardFood, setClipBoardFood] = useState(false);\n  const [clipBoardDrink, setClipBoardDrink] = useState(false);\n\n  function buttonsFilters(param) {\n    if (param === 'all') {\n      setFilterRecipes(favoriteRecipes\n         && favoriteRecipes.filter(({ type }) => type));\n    }\n    if (param === 'food') {\n      setFilterRecipes(favoriteRecipes\n        && favoriteRecipes.filter(({ type }) => type === 'comida'));\n    } if (param === 'drinks') {\n      setFilterRecipes(favoriteRecipes\n        && favoriteRecipes.filter(({ type }) => type === 'bebida'));\n    }\n  }\n\n  function clipBoard(type, id) {\n    copy(`http://localhost:3000/${type}s/${id}`);\n    if (type === 'comida') {\n      setClipBoardFood(true);\n    } if (type === 'bebida') {\n      setClipBoardDrink(true);\n    }\n  }\n\n  function removeFavorite(target, idItem) {\n    const item = document.getElementById('container-favorite');\n    item.remove();\n    const obj = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newObj = obj.filter(({ id }) => id !== idItem);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newObj));\n  }\n\n  return (\n    <>\n\n      <Header title=\"Receitas Favoritas\" isSearch={ false } />\n      <nav className=\"filter-buttons\">\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          onClick={ () => buttonsFilters('all') }\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          onClick={ () => buttonsFilters('food') }\n        >\n          Food\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          onClick={ () => buttonsFilters('drinks') }\n        >\n          Drinks\n        </button>\n      </nav>\n      {filterRecipes && filterRecipes\n        .map(\n          ({ id, image, category, name, type,\n            area, alcoholicOrNot }, index) => (\n            type === 'comida'\n              ? (\n                <div\n                  className=\"container-favorite\"\n                  key={ id }\n                >\n                  <Link to={ `/${type}s/${id}` }>\n                    <img\n                      className=\"images\"\n                      src={ image }\n                      alt=\"imagem-receive\"\n                      data-testid={ `${index}-horizontal-image` }\n                    />\n                    <p\n                      className=\"recipe-name\"\n                      data-testid={ `${index}-horizontal-name` }\n                    >\n                      {name}\n\n                    </p>\n                  </Link>\n                  <p data-testid={ `${index}-horizontal-top-text` }>\n                    {`${area} - ${category}`}\n                  </p>\n                  <div className=\"buttons-share-favorite\">\n                    <button type=\"button\" onClick={ () => clipBoard(type, id) }>\n                      <img\n                        data-testid={ `${index}-horizontal-share-btn` }\n                        src={ shareIcon }\n                        alt=\"share button\"\n                      />\n                    </button>\n                    <button\n                      type=\"button\"\n                      onClick={ ({ target }) => removeFavorite(target, id) }\n                    >\n                      <img\n                        data-testid={ `${index}-horizontal-favorite-btn` }\n                        src={ blackHeartIcon }\n                        alt=\"favorite button\"\n                      />\n                    </button>\n                    <spam>{clipBoardFood === true ? 'Link copiado!' : null}</spam>\n                  </div>\n                </div>)\n              : (\n                <div key={ id }>\n                  <Link to={ `/${type}s/${id}` }>\n                    <img\n                      className=\"images\"\n                      src={ image }\n                      alt=\"imagem-receive\"\n                      data-testid={ `${index}-horizontal-image` }\n                    />\n                    <p data-testid={ `${index}-horizontal-name` }>{name}</p>\n                  </Link>\n                  <p data-testid={ `${index}-horizontal-top-text` }>{alcoholicOrNot}</p>\n                  <button type=\"button\" onClick={ () => clipBoard(type, id) }>\n                    <img\n                      data-testid={ `${index}-horizontal-share-btn` }\n                      src={ shareIcon }\n                      alt=\"share button\"\n                    />\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={ ({ target }) => removeFavorite(target, id) }\n                  >\n                    <img\n                      data-testid={ `${index}-horizontal-favorite-btn` }\n                      src={ blackHeartIcon }\n                      alt=\"favorite button\"\n                    />\n                  </button>\n                  <spam>{clipBoardDrink === true ? 'Link copiado!' : null}</spam>\n                </div>)\n          ),\n        )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}