{"ast":null,"code":"var _jsxFileName = \"/home/phlopes/Projetos/sd-010-a-project-recipes-app/src/pages/RecipesFavorite/index.js\";\nimport React, { useState } from 'react';\nimport copy from 'clipboard-copy';\nimport { Link } from 'react-router-dom';\nimport shareIcon from \"../../images/shareIcon.svg\";\nimport blackHeartIcon from \"../../images/blackHeartIcon.svg\";\nexport default function RecipesFavorite() {\n  const doneRecipes = [{\n    id: '52771',\n    type: 'comida',\n    area: 'Italian',\n    category: 'Vegetarian',\n    alcoholicOrNot: '',\n    name: 'Spicy Arrabiata Penne',\n    image: 'https://www.themealdb.com/images/media/meals/ustsqw1468250014.jpg',\n    doneDate: '23/06/2020',\n    tags: ['Pasta', 'Curry']\n  }, {\n    id: '178319',\n    type: 'bebida',\n    area: '',\n    category: 'Cocktail',\n    alcoholicOrNot: 'Alcoholic',\n    name: 'Aquamarine',\n    image: 'https://www.thecocktaildb.com/images/media/drink/zvsre31572902738.jpg',\n    doneDate: '23/06/2020',\n    tags: []\n  }];\n  localStorage.setItem('doneRecipes', JSON.stringify(doneRecipes));\n  const [filterRecipes, setFilterRecipes] = useState(doneRecipes);\n  const [clipBoardFood, setClipBoardFood] = useState(false);\n  const [clipBoardDrink, setClipBoardDrink] = useState(false);\n\n  function buttonsFilters(param) {\n    if (param === 'all') {\n      setFilterRecipes(doneRecipes.filter(({\n        type\n      }) => type));\n    }\n\n    if (param === 'food') {\n      setFilterRecipes(doneRecipes.filter(({\n        type\n      }) => type === 'comida'));\n    }\n\n    if (param === 'drinks') {\n      setFilterRecipes(doneRecipes.filter(({\n        type\n      }) => type === 'bebida'));\n    }\n  }\n\n  function clipBoard(type, id) {\n    copy(`http://localhost:3000/${type}s/${id}`);\n\n    if (type === 'comida') {\n      setClipBoardFood(true);\n    }\n\n    if (type === 'bebida') {\n      setClipBoardDrink(true);\n    }\n  }\n\n  function removeFavorite(e) {\n    const itemRemove = e.target.parentNode.parentNode.innerHTML.split(' ')[1].split('').splice(15, 18).splice(0, 5).join('');\n    console.log(itemRemove);\n    const obj = JSON.parse(localStorage.getItem('doneRecipes'));\n    const id = obj.filter(({\n      id\n    }) => id === itemRemove);\n    console.log(id);\n    localStorage.setItem('doneRecipes', JSON.stringify(obj));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"filter-by-all-btn\",\n    onClick: () => buttonsFilters('all'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"filter-by-food-btn\",\n    onClick: () => buttonsFilters('food'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Food\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"filter-by-drink-btn\",\n    onClick: () => buttonsFilters('drinks'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Drinks\")), filterRecipes.map(({\n    id,\n    image,\n    category,\n    name,\n    doneDate,\n    tags,\n    type,\n    area,\n    alcoholicOrNot\n  }, index) => type === 'comida' ? /*#__PURE__*/React.createElement(\"div\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: \"150px\",\n    src: image,\n    alt: \"imagem-receive\",\n    \"data-testid\": `${index}-horizontal-image`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  }, `${area} - ${category}`), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-done-date`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }, doneDate), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-${tags[0]}-horizontal-tag`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, tags[0]), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-${tags[1]}-horizontal-tag`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, tags[1]), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => clipBoard(type, id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    src: shareIcon,\n    alt: \"share button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: e => removeFavorite(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-favorite-btn`,\n    src: blackHeartIcon,\n    alt: \"share button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"spam\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, clipBoardFood === true ? 'Link copiado!' : null)) : /*#__PURE__*/React.createElement(\"div\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: \"150px\",\n    src: image,\n    alt: \"imagem-receive\",\n    \"data-testid\": `${index}-horizontal-image`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }, alcoholicOrNot), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-done-date`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }, doneDate), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => clipBoard(type, id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    src: shareIcon,\n    alt: \"share button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: e => removeFavorite(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-favorite-btn`,\n    src: blackHeartIcon,\n    alt: \"share button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"spam\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }, clipBoardDrink === true ? 'Link copiado!' : null))));\n}","map":{"version":3,"sources":["/home/phlopes/Projetos/sd-010-a-project-recipes-app/src/pages/RecipesFavorite/index.js"],"names":["React","useState","copy","Link","RecipesFavorite","doneRecipes","id","type","area","category","alcoholicOrNot","name","image","doneDate","tags","localStorage","setItem","JSON","stringify","filterRecipes","setFilterRecipes","clipBoardFood","setClipBoardFood","clipBoardDrink","setClipBoardDrink","buttonsFilters","param","filter","clipBoard","removeFavorite","e","itemRemove","target","parentNode","innerHTML","split","splice","join","console","log","obj","parse","getItem","map","index","shareIcon","blackHeartIcon"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport copy from 'clipboard-copy';\nimport { Link } from 'react-router-dom';\nimport shareIcon from '../../images/shareIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\n\nexport default function RecipesFavorite() {\n  const doneRecipes = [\n    {\n      id: '52771',\n      type: 'comida',\n      area: 'Italian',\n      category: 'Vegetarian',\n      alcoholicOrNot: '',\n      name: 'Spicy Arrabiata Penne',\n      image: 'https://www.themealdb.com/images/media/meals/ustsqw1468250014.jpg',\n      doneDate: '23/06/2020',\n      tags: ['Pasta', 'Curry'],\n    },\n    {\n      id: '178319',\n      type: 'bebida',\n      area: '',\n      category: 'Cocktail',\n      alcoholicOrNot: 'Alcoholic',\n      name: 'Aquamarine',\n      image: 'https://www.thecocktaildb.com/images/media/drink/zvsre31572902738.jpg',\n      doneDate: '23/06/2020',\n      tags: [],\n    },\n  ];\n\n  localStorage.setItem('doneRecipes', JSON.stringify(doneRecipes));\n\n  const [filterRecipes, setFilterRecipes] = useState(doneRecipes);\n  const [clipBoardFood, setClipBoardFood] = useState(false);\n  const [clipBoardDrink, setClipBoardDrink] = useState(false);\n\n  function buttonsFilters(param) {\n    if (param === 'all') {\n      setFilterRecipes(doneRecipes.filter(({ type }) => type));\n    }\n    if (param === 'food') {\n      setFilterRecipes(doneRecipes.filter(({ type }) => type === 'comida'));\n    } if (param === 'drinks') {\n      setFilterRecipes(doneRecipes.filter(({ type }) => type === 'bebida'));\n    }\n  }\n\n  function clipBoard(type, id) {\n    copy(`http://localhost:3000/${type}s/${id}`);\n    if (type === 'comida') {\n      setClipBoardFood(true);\n    } if (type === 'bebida') {\n      setClipBoardDrink(true);\n    }\n  }\n\n  function removeFavorite(e) {\n    const itemRemove = e.target.parentNode.parentNode.innerHTML.split(' ')[1].split('').splice(15, 18).splice(0,5).join('');\n    console.log(itemRemove);\n    const obj = JSON.parse(localStorage.getItem('doneRecipes'));\n    const id = obj.filter(({id}) => id === itemRemove);\n    console.log(id)\n    localStorage.setItem('doneRecipes', JSON.stringify(obj));\n\n  }\n  return (\n    <>\n      <nav>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          onClick={ () => buttonsFilters('all') }\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          onClick={ () => buttonsFilters('food') }\n        >\n          Food\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          onClick={ () => buttonsFilters('drinks') }\n        >\n          Drinks\n        </button>\n      </nav>\n      {filterRecipes\n        .map(\n          ({ id, image, category, name, doneDate, tags, type,\n            area, alcoholicOrNot }, index) => (\n            type === 'comida'\n              ? (\n                <div\n                  key={ id }\n                >\n                  <Link to={ `/${type}s/${id}` }>\n                    <img\n                      width=\"150px\"\n                      src={ image }\n                      alt=\"imagem-receive\"\n                      data-testid={ `${index}-horizontal-image` }\n                    />\n                    <p data-testid={ `${index}-horizontal-name` }>{name}</p>\n                  </Link>\n                  <p data-testid={ `${index}-horizontal-top-text` }>\n                    {`${area} - ${category}`}\n                  </p>\n                  <p data-testid={ `${index}-horizontal-done-date` }>{doneDate}</p>\n                  <p data-testid={ `${index}-${tags[0]}-horizontal-tag` }>\n                    {tags[0]}\n                  </p>\n                  <p data-testid={ `${index}-${tags[1]}-horizontal-tag` }>\n                    {tags[1]}\n                  </p>\n                  <button type=\"button\" onClick={ () => clipBoard(type, id) }>\n                    <img\n                      data-testid={ `${index}-horizontal-share-btn` }\n                      src={ shareIcon }\n                      alt=\"share button\"\n                    />\n                  </button>\n                  <button type=\"button\" onClick={ (e) => removeFavorite(e) }>\n                    <img\n                      data-testid={ `${index}-horizontal-favorite-btn` }\n                      src={ blackHeartIcon }\n                      alt=\"share button\"\n                    />\n                  </button>\n                  <spam>{clipBoardFood === true ? 'Link copiado!' : null}</spam>\n                </div>)\n              : (\n                <div key={ id }>\n                  <Link to={ `/${type}s/${id}` }>\n                    <img\n                      width=\"150px\"\n                      src={ image }\n                      alt=\"imagem-receive\"\n                      data-testid={ `${index}-horizontal-image` }\n                    />\n                    <p data-testid={ `${index}-horizontal-name` }>{name}</p>\n                  </Link>\n                  <p data-testid={ `${index}-horizontal-top-text` }>{alcoholicOrNot}</p>\n                  <p data-testid={ `${index}-horizontal-done-date` }>{doneDate}</p>\n                  <button type=\"button\" onClick={ () => clipBoard(type, id) }>\n                    <img\n                      data-testid={ `${index}-horizontal-share-btn` }\n                      src={ shareIcon }\n                      alt=\"share button\"\n                    />\n                  </button>\n                  <button type=\"button\" onClick={ (e) => removeFavorite(e) }>\n                    <img\n                      data-testid={ `${index}-horizontal-favorite-btn` }\n                      src={ blackHeartIcon }\n                      alt=\"share button\"\n                    />\n                  </button>\n                  <spam>{clipBoardDrink === true ? 'Link copiado!' : null}</spam>\n                </div>)\n          ),\n        )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}