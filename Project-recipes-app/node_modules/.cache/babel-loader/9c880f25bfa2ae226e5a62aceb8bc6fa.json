{"ast":null,"code":"var _jsxFileName = \"/home/phlopes/Projetos/sd-010-a-project-recipes-app/src/context/AppContext.jsx\";\nimport React, { useState, createContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchRecipesApi, fetchCategoriesApi } from '../services/fetchApiMain';\nexport const AppContext = createContext();\nexport default function AppProvider({\n  children\n}) {\n  // header States\n  const [displaySearchBar, setDisplaySearchBar] = useState(false);\n  const [searchValue, setSearchValue] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  const [pageOrigin, setPageOrigin] = useState('');\n  const [recipesList, setRecipesList] = useState([]);\n  const [categoriesList, setCategoriesList] = useState([]);\n  const NUM_RECIPES_SHOWN = 12;\n  const NUM_CATEG_SHOWN = 5;\n  const context = {\n    displaySearchBar,\n    setDisplaySearchBar,\n    searchValue,\n    setSearchValue,\n    inputValue,\n    setInputValue,\n    pageOrigin,\n    setPageOrigin,\n    recipesList,\n    setRecipesList,\n    categoriesList,\n    setCategoriesList\n  };\n  useEffect(() => {\n    fetchCategoriesApi(pageOrigin).then(categories => {\n      categories.splice(NUM_CATEG_SHOWN, categories.length - 1);\n      setCategoriesList(categories);\n    });\n  }, [pageOrigin]);\n  useEffect(() => {\n    fetchRecipesApi(pageOrigin).then(recipes => {\n      recipes.splice(NUM_RECIPES_SHOWN, recipes.length - 1);\n      setRecipesList(recipes);\n    });\n  }, [pageOrigin]);\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      context\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, children);\n}\nAppProvider.propTypes = {\n  children: PropTypes.node\n}.isRequired;","map":{"version":3,"sources":["/home/phlopes/Projetos/sd-010-a-project-recipes-app/src/context/AppContext.jsx"],"names":["React","useState","createContext","useEffect","PropTypes","fetchRecipesApi","fetchCategoriesApi","AppContext","AppProvider","children","displaySearchBar","setDisplaySearchBar","searchValue","setSearchValue","inputValue","setInputValue","pageOrigin","setPageOrigin","recipesList","setRecipesList","categoriesList","setCategoriesList","NUM_RECIPES_SHOWN","NUM_CATEG_SHOWN","context","then","categories","splice","length","recipes","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,0BAApD;AAEA,OAAO,MAAMC,UAAU,GAAGL,aAAa,EAAhC;AACP,eAAe,SAASM,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAmC;AAChD;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACmB,cAAD,EAAiBC,iBAAjB,IAAsCpB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAMqB,iBAAiB,GAAG,EAA1B;AACA,QAAMC,eAAe,GAAG,CAAxB;AACA,QAAMC,OAAO,GAAG;AACdd,IAAAA,gBADc;AAEdC,IAAAA,mBAFc;AAGdC,IAAAA,WAHc;AAIdC,IAAAA,cAJc;AAKdC,IAAAA,UALc;AAMdC,IAAAA,aANc;AAOdC,IAAAA,UAPc;AAQdC,IAAAA,aARc;AASdC,IAAAA,WATc;AAUdC,IAAAA,cAVc;AAWdC,IAAAA,cAXc;AAYdC,IAAAA;AAZc,GAAhB;AAeAlB,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,kBAAkB,CAACU,UAAD,CAAlB,CACGS,IADH,CACSC,UAAD,IAAgB;AACpBA,MAAAA,UAAU,CAACC,MAAX,CAAkBJ,eAAlB,EAAmCG,UAAU,CAACE,MAAX,GAAoB,CAAvD;AACAP,MAAAA,iBAAiB,CAACK,UAAD,CAAjB;AACD,KAJH;AAKD,GANQ,EAMN,CAACV,UAAD,CANM,CAAT;AAQAb,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,eAAe,CAACW,UAAD,CAAf,CACGS,IADH,CACSI,OAAD,IAAa;AACjBA,MAAAA,OAAO,CAACF,MAAR,CAAeL,iBAAf,EAAkCO,OAAO,CAACD,MAAR,GAAiB,CAAnD;AACAT,MAAAA,cAAc,CAACU,OAAD,CAAd;AACD,KAJH;AAKD,GANQ,EAMN,CAACb,UAAD,CANM,CAAT;AAQA,sBACE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAG;AAAEQ,MAAAA;AAAF,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,QADH,CADF;AAKD;AAEDD,WAAW,CAACsB,SAAZ,GAAwB;AACtBrB,EAAAA,QAAQ,EAAEL,SAAS,CAAC2B;AADE,EAEtBC,UAFF","sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchRecipesApi, fetchCategoriesApi } from '../services/fetchApiMain';\n\nexport const AppContext = createContext();\nexport default function AppProvider({ children }) {\n  // header States\n  const [displaySearchBar, setDisplaySearchBar] = useState(false);\n  const [searchValue, setSearchValue] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  const [pageOrigin, setPageOrigin] = useState('');\n  const [recipesList, setRecipesList] = useState([]);\n  const [categoriesList, setCategoriesList] = useState([]);\n  const NUM_RECIPES_SHOWN = 12;\n  const NUM_CATEG_SHOWN = 5;\n  const context = {\n    displaySearchBar,\n    setDisplaySearchBar,\n    searchValue,\n    setSearchValue,\n    inputValue,\n    setInputValue,\n    pageOrigin,\n    setPageOrigin,\n    recipesList,\n    setRecipesList,\n    categoriesList,\n    setCategoriesList,\n  };\n\n  useEffect(() => {\n    fetchCategoriesApi(pageOrigin)\n      .then((categories) => {\n        categories.splice(NUM_CATEG_SHOWN, categories.length - 1);\n        setCategoriesList(categories);\n      });\n  }, [pageOrigin]);\n\n  useEffect(() => {\n    fetchRecipesApi(pageOrigin)\n      .then((recipes) => {\n        recipes.splice(NUM_RECIPES_SHOWN, recipes.length - 1);\n        setRecipesList(recipes);\n      });\n  }, [pageOrigin]);\n\n  return (\n    <AppContext.Provider value={ { context } }>\n      {children}\n    </AppContext.Provider>\n  );\n}\n\nAppProvider.propTypes = {\n  children: PropTypes.node,\n}.isRequired;\n"]},"metadata":{},"sourceType":"module"}