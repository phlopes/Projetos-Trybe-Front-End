{"ast":null,"code":"var _jsxFileName = \"/home/phlopes/Projetos/sd-010-a-project-recipes-app/src/pages/RecipesMain/RecipeCard.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nexport default function RecipeCard({\n  recipe,\n  index,\n  isMain,\n  path\n}) {\n  const [getImage, setGetImage] = useState('');\n  useEffect(() => {\n    const controller = new AbortController();\n\n    if (isMain === false) {\n      const item = recipe.strIngredient || recipe.strIngredient1;\n      const url = `https://www.${path}.com/images/ingredients/${item}-Small.png`;\n      fetch(url, {\n        signal: controller.signal\n      }).then(result => setGetImage(result.url)).catch(error => console.log(error));\n    }\n\n    return () => {\n      controller.abort();\n    };\n  }, [path, recipe, isMain]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipe-card\",\n    \"data-testid\": isMain ? `${index}-recipe-card` : `${index}-ingredient-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-card-img`,\n    src: isMain ? recipe.strMealThumb || recipe.strDrinkThumb : getImage,\n    alt: \"recipe\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, isMain ? recipe.strMeal || recipe.strDrink : recipe.strIngredient || recipe.strIngredient1));\n}\nRecipeCard.propTypes = {\n  recipe: PropTypes.object,\n  index: PropTypes.number\n}.isRequired;","map":{"version":3,"sources":["/home/phlopes/Projetos/sd-010-a-project-recipes-app/src/pages/RecipesMain/RecipeCard.js"],"names":["React","useState","useEffect","PropTypes","RecipeCard","recipe","index","isMain","path","getImage","setGetImage","controller","AbortController","item","strIngredient","strIngredient1","url","fetch","signal","then","result","catch","error","console","log","abort","strMealThumb","strDrinkThumb","strMeal","strDrink","propTypes","object","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA,MAAjB;AAAyBC,EAAAA;AAAzB,CAApB,EAAqD;AAClE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,UAAU,GAAG,IAAIC,eAAJ,EAAnB;;AACA,QAAIL,MAAM,KAAK,KAAf,EAAsB;AACpB,YAAMM,IAAI,GAAGR,MAAM,CAACS,aAAP,IAAwBT,MAAM,CAACU,cAA5C;AACA,YAAMC,GAAG,GAAI,eAAcR,IAAK,2BAA0BK,IAAK,YAA/D;AACAI,MAAAA,KAAK,CAACD,GAAD,EAAM;AAAEE,QAAAA,MAAM,EAAEP,UAAU,CAACO;AAArB,OAAN,CAAL,CACGC,IADH,CACSC,MAAD,IAAYV,WAAW,CAACU,MAAM,CAACJ,GAAR,CAD/B,EAEGK,KAFH,CAEUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFpB;AAGD;;AACD,WAAQ,MAAM;AACZX,MAAAA,UAAU,CAACc,KAAX;AACD,KAFD;AAGD,GAZQ,EAYN,CAACjB,IAAD,EAAOH,MAAP,EAAeE,MAAf,CAZM,CAAT;AAcA,sBAEE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,mBAAcA,MAAM,GAAI,GAAED,KAAM,cAAZ,GAA6B,GAAEA,KAAM,kBAF3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AACE,mBAAe,GAAEA,KAAM,WADzB;AAEE,IAAA,GAAG,EAAGC,MAAM,GAAGF,MAAM,CAACqB,YAAP,IAAuBrB,MAAM,CAACsB,aAAjC,GACRlB,QAHN;AAIE,IAAA,GAAG,EAAC,QAJN;AAKE,IAAA,KAAK,EAAC,MALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAYE;AACE,mBAAe,GAAEH,KAAM,YADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGIC,MAAM,GACJF,MAAM,CAACuB,OAAP,IAAkBvB,MAAM,CAACwB,QADrB,GAEJxB,MAAM,CAACS,aAAP,IAAwBT,MAAM,CAACU,cALrC,CAZF,CAFF;AAwBD;AAEDX,UAAU,CAAC0B,SAAX,GAAuB;AACrBzB,EAAAA,MAAM,EAAEF,SAAS,CAAC4B,MADG;AAErBzB,EAAAA,KAAK,EAAEH,SAAS,CAAC6B;AAFI,EAGrBC,UAHF","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function RecipeCard({ recipe, index, isMain, path }) {\n  const [getImage, setGetImage] = useState('');\n\n  useEffect(() => {\n    const controller = new AbortController();\n    if (isMain === false) {\n      const item = recipe.strIngredient || recipe.strIngredient1;\n      const url = `https://www.${path}.com/images/ingredients/${item}-Small.png`;\n      fetch(url, { signal: controller.signal })\n        .then((result) => setGetImage(result.url))\n        .catch((error) => console.log(error));\n    }\n    return (() => {\n      controller.abort();\n    });\n  }, [path, recipe, isMain]);\n\n  return (\n\n    <div\n      className=\"recipe-card\"\n      data-testid={ isMain ? `${index}-recipe-card` : `${index}-ingredient-card` }\n    >\n\n      <img\n        data-testid={ `${index}-card-img` }\n        src={ isMain ? recipe.strMealThumb || recipe.strDrinkThumb\n          : getImage }\n        alt=\"recipe\"\n        width=\"100%\"\n      />\n      <p\n        data-testid={ `${index}-card-name` }\n      >\n        { isMain\n          ? recipe.strMeal || recipe.strDrink\n          : recipe.strIngredient || recipe.strIngredient1 }\n\n      </p>\n    </div>\n  );\n}\n\nRecipeCard.propTypes = {\n  recipe: PropTypes.object,\n  index: PropTypes.number,\n}.isRequired;\n"]},"metadata":{},"sourceType":"module"}