{"ast":null,"code":"var _jsxFileName = \"/home/phlopes/Projetos/sd-010-a-project-recipes-app/src/pages/RecipesProgress/BtnFavorite.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport whiteHeart from \"../../images/whiteHeartIcon.svg\";\nimport blackHeart from \"../../images/blackHeartIcon.svg\";\nimport { AppContext } from '../../context/AppContext';\nexport default function BtnFavorite({\n  id\n}) {\n  const {\n    context\n  } = useContext(AppContext);\n  const {\n    toStorage\n  } = context;\n  const [isFavorite, setIsFavorite] = useState(false);\n  const key = 'favoriteRecipes';\n\n  function handleFavoriteRecipe() {\n    setIsFavorite(!isFavorite);\n  }\n\n  useEffect(() => {\n    const storageValue = localStorage.getItem(key);\n\n    if (storageValue) {\n      const result = JSON.parse(storageValue);\n      const comparison = result && result.some(item => item.id === id);\n\n      if (comparison) {\n        setIsFavorite(true);\n      }\n    }\n  }, [id]);\n  useEffect(() => {\n    if (isFavorite === true) {\n      localStorage.setItem(key, JSON.stringify(toStorage));\n    } else {\n      localStorage.removeItem(key);\n    }\n  }, [isFavorite, toStorage]);\n  return /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleFavoriteRecipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: isFavorite ? blackHeart : whiteHeart,\n    alt: \"imagem favoritar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n}\nBtnFavorite.propTypes = {\n  id: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/phlopes/Projetos/sd-010-a-project-recipes-app/src/pages/RecipesProgress/BtnFavorite.js"],"names":["React","useState","useContext","useEffect","PropTypes","AppContext","BtnFavorite","id","context","toStorage","isFavorite","setIsFavorite","key","handleFavoriteRecipe","storageValue","localStorage","getItem","result","JSON","parse","comparison","some","item","setItem","stringify","removeItem","blackHeart","whiteHeart","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAIA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAA6B;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAcN,UAAU,CAACG,UAAD,CAA9B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAgBD,OAAtB;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAMW,GAAG,GAAG,iBAAZ;;AAEA,WAASC,oBAAT,GAAgC;AAC9BF,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD;;AAEDP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqBJ,GAArB,CAArB;;AACA,QAAIE,YAAJ,EAAkB;AAChB,YAAMG,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWL,YAAX,CAAf;AACA,YAAMM,UAAU,GAAGH,MAAM,IAAIA,MAAM,CAACI,IAAP,CAAaC,IAAD,IACvCA,IAAI,CAACf,EAAL,KAAYA,EADe,CAA7B;;AAEA,UAAIa,UAAJ,EAAgB;AACdT,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF;AACF,GAVQ,EAUN,CAACJ,EAAD,CAVM,CAAT;AAYAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,UAAU,KAAK,IAAnB,EAAyB;AACvBK,MAAAA,YAAY,CAACQ,OAAb,CAAqBX,GAArB,EAA0BM,IAAI,CAACM,SAAL,CAAef,SAAf,CAA1B;AACD,KAFD,MAEO;AACLM,MAAAA,YAAY,CAACU,UAAb,CAAwBb,GAAxB;AACD;AACF,GANQ,EAMN,CAACF,UAAD,EAAaD,SAAb,CANM,CAAT;AAQA,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAGI,oBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AACE,mBAAY,cADd;AAEE,IAAA,GAAG,EAAGH,UAAU,GAAGgB,UAAH,GAAgBC,UAFlC;AAGE,IAAA,GAAG,EAAC,kBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAaD;AAEDrB,WAAW,CAACsB,SAAZ,GAAwB;AACtBrB,EAAAA,EAAE,EAAEH,SAAS,CAACyB,MAAV,CAAiBC;AADC,CAAxB","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport whiteHeart from '../../images/whiteHeartIcon.svg';\nimport blackHeart from '../../images/blackHeartIcon.svg';\nimport { AppContext } from '../../context/AppContext';\n\nexport default function BtnFavorite({ id }) {\n  const { context } = useContext(AppContext);\n  const { toStorage } = context;\n  const [isFavorite, setIsFavorite] = useState(false);\n\n  const key = 'favoriteRecipes';\n\n  function handleFavoriteRecipe() {\n    setIsFavorite(!isFavorite);\n  }\n\n  useEffect(() => {\n    const storageValue = localStorage.getItem(key);\n    if (storageValue) {\n      const result = JSON.parse(storageValue);\n      const comparison = result && result.some((item) => (\n        item.id === id));\n      if (comparison) {\n        setIsFavorite(true);\n      }\n    }\n  }, [id]);\n\n  useEffect(() => {\n    if (isFavorite === true) {\n      localStorage.setItem(key, JSON.stringify(toStorage));\n    } else {\n      localStorage.removeItem(key);\n    }\n  }, [isFavorite, toStorage]);\n\n  return (\n    <button\n      type=\"button\"\n      onClick={ handleFavoriteRecipe }\n    >\n      <img\n        data-testid=\"favorite-btn\"\n        src={ isFavorite ? blackHeart : whiteHeart }\n        alt=\"imagem favoritar\"\n      />\n    </button>\n\n  );\n}\n\nBtnFavorite.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}