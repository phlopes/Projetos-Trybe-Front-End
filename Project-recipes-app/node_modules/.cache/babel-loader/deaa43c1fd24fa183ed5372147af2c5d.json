{"ast":null,"code":"var _jsxFileName = \"/home/phlopes/Projetos/sd-010-a-project-recipes-app/src/context/AppContext.jsx\";\nimport React, { useState, createContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchRecipesApi, fetchCategoriesApi } from '../services/fetchApiMain';\nexport const AppContext = createContext();\nexport default function AppProvider({\n  children\n}) {\n  // header States\n  const [displaySearchBar, setDisplaySearchBar] = useState(false);\n  const [searchValue, setSearchValue] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  const [pageOrigin, setPageOrigin] = useState('');\n  const [recipesList, setRecipesList] = useState([]);\n  const [categoriesList, setCategoriesList] = useState([]);\n  const [toStorage, setToStorage] = useState('');\n  const [toDoneStorage, setToDoneStorage] = useState([]);\n  const [checkedState, setCheckedState] = useState(true);\n  const [recipe, setRecipe] = useState('');\n  const [byIngredients, setByIngredients] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const NUM_RECIPES_SHOWN = 12;\n  const NUM_CATEG_SHOWN = 5;\n  const context = {\n    displaySearchBar,\n    setDisplaySearchBar,\n    searchValue,\n    setSearchValue,\n    inputValue,\n    setInputValue,\n    pageOrigin,\n    setPageOrigin,\n    recipesList,\n    setRecipesList,\n    categoriesList,\n    setCategoriesList,\n    toStorage,\n    checkedState,\n    setCheckedState,\n    recipe,\n    setRecipe,\n    toDoneStorage,\n    byIngredients,\n    setByIngredients,\n    isLoading,\n    setIsLoading\n  };\n  useEffect(() => {\n    const inProgressStorage = [{\n      id: recipe.idMeal || recipe.idDrink,\n      type: pageOrigin.includes('themealdb') ? 'comida' : 'bebida',\n      area: recipe.strArea || '',\n      category: recipe.strCategory || '',\n      alcoholicOrNot: recipe.strAlcoholic || '',\n      name: recipe.strMeal || recipe.strDrink,\n      image: recipe.strMealThumb || recipe.strDrinkThumb\n    }];\n    setToStorage(inProgressStorage);\n  }, [recipe, pageOrigin]); // ideia para criar o formato da data\n  // https://qastack.com.br/programming/6040515/how-do-i-get-month-and-date-of-javascript-in-2-digit-format\n\n  useEffect(() => {\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    setToDoneStorage(doneRecipes);\n  }, [recipe, pageOrigin]);\n  useEffect(() => {\n    if (pageOrigin !== '') {\n      fetchCategoriesApi(pageOrigin).then(categories => {\n        categories.splice(NUM_CATEG_SHOWN, categories.length - 1);\n        setCategoriesList(categories);\n      });\n    }\n  }, [pageOrigin]);\n  useEffect(() => {\n    if (pageOrigin !== '') {\n      setIsLoading(true);\n      fetchRecipesApi(pageOrigin).then(recipes => {\n        recipes.splice(NUM_RECIPES_SHOWN, recipes.length - 1);\n        setRecipesList(recipes);\n      });\n      setIsLoading(false);\n    }\n\n    return () => {\n      setIsLoading(false);\n    };\n  }, [pageOrigin]);\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      context\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, children);\n}\nAppProvider.propTypes = {\n  children: PropTypes.node\n}.isRequired;","map":{"version":3,"sources":["/home/phlopes/Projetos/sd-010-a-project-recipes-app/src/context/AppContext.jsx"],"names":["React","useState","createContext","useEffect","PropTypes","fetchRecipesApi","fetchCategoriesApi","AppContext","AppProvider","children","displaySearchBar","setDisplaySearchBar","searchValue","setSearchValue","inputValue","setInputValue","pageOrigin","setPageOrigin","recipesList","setRecipesList","categoriesList","setCategoriesList","toStorage","setToStorage","toDoneStorage","setToDoneStorage","checkedState","setCheckedState","recipe","setRecipe","byIngredients","setByIngredients","isLoading","setIsLoading","NUM_RECIPES_SHOWN","NUM_CATEG_SHOWN","context","inProgressStorage","id","idMeal","idDrink","type","includes","area","strArea","category","strCategory","alcoholicOrNot","strAlcoholic","name","strMeal","strDrink","image","strMealThumb","strDrinkThumb","doneRecipes","JSON","parse","localStorage","getItem","then","categories","splice","length","recipes","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchRecipesApi, fetchCategoriesApi } from '../services/fetchApiMain';\n\nexport const AppContext = createContext();\nexport default function AppProvider({ children }) {\n  // header States\n  const [displaySearchBar, setDisplaySearchBar] = useState(false);\n  const [searchValue, setSearchValue] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  const [pageOrigin, setPageOrigin] = useState('');\n  const [recipesList, setRecipesList] = useState([]);\n  const [categoriesList, setCategoriesList] = useState([]);\n  const [toStorage, setToStorage] = useState('');\n  const [toDoneStorage, setToDoneStorage] = useState([]);\n  const [checkedState, setCheckedState] = useState(true);\n  const [recipe, setRecipe] = useState('');\n  const [byIngredients, setByIngredients] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const NUM_RECIPES_SHOWN = 12;\n  const NUM_CATEG_SHOWN = 5;\n  const context = {\n    displaySearchBar,\n    setDisplaySearchBar,\n    searchValue,\n    setSearchValue,\n    inputValue,\n    setInputValue,\n    pageOrigin,\n    setPageOrigin,\n    recipesList,\n    setRecipesList,\n    categoriesList,\n    setCategoriesList,\n    toStorage,\n    checkedState,\n    setCheckedState,\n    recipe,\n    setRecipe,\n    toDoneStorage,\n    byIngredients,\n    setByIngredients,\n    isLoading,\n    setIsLoading,\n  };\n\n  useEffect(() => {\n    const inProgressStorage = [{\n      id: recipe.idMeal || recipe.idDrink,\n      type: pageOrigin.includes('themealdb') ? 'comida' : 'bebida',\n      area: recipe.strArea || '',\n      category: recipe.strCategory || '',\n      alcoholicOrNot: recipe.strAlcoholic || '',\n      name: recipe.strMeal || recipe.strDrink,\n      image: recipe.strMealThumb || recipe.strDrinkThumb,\n    }];\n    setToStorage(inProgressStorage);\n  }, [recipe, pageOrigin]);\n\n  // ideia para criar o formato da data\n  // https://qastack.com.br/programming/6040515/how-do-i-get-month-and-date-of-javascript-in-2-digit-format\n\n  useEffect(() => {\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    setToDoneStorage(doneRecipes);\n  }, [recipe, pageOrigin]);\n\n  useEffect(() => {\n    if (pageOrigin !== '') {\n      fetchCategoriesApi(pageOrigin)\n        .then((categories) => {\n          categories.splice(NUM_CATEG_SHOWN, categories.length - 1);\n          setCategoriesList(categories);\n        });\n    }\n  }, [pageOrigin]);\n\n  useEffect(() => {\n    if (pageOrigin !== '') {\n      setIsLoading(true);\n      fetchRecipesApi(pageOrigin)\n        .then((recipes) => {\n          recipes.splice(NUM_RECIPES_SHOWN, recipes.length - 1);\n          setRecipesList(recipes);\n        });\n      setIsLoading(false);\n    }\n    return (() => {\n      setIsLoading(false);\n    });\n  }, [pageOrigin]);\n\n  return (\n    <AppContext.Provider value={ { context } }>\n      {children}\n    </AppContext.Provider>\n  );\n}\n\nAppProvider.propTypes = {\n  children: PropTypes.node,\n}.isRequired;\n"]},"metadata":{},"sourceType":"module"}