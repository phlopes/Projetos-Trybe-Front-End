{"ast":null,"code":"var _jsxFileName = \"/home/phlopes/Projetos/sd-010-a-project-recipes-app/src/pages/RecipesDone/index.js\";\nimport React, { useState } from 'react';\nimport copy from 'clipboard-copy';\nimport { Link } from 'react-router-dom';\nimport shareIcon from \"../../images/shareIcon.svg\";\nimport Header from '../../components/header';\nimport './index.css';\nexport default function RecipesDone() {\n  const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  const [filterRecipes, setFilterRecipes] = useState(doneRecipes);\n  const [clipBoardFood, setClipBoardFood] = useState(false);\n  const [clipBoardDrink, setClipBoardDrink] = useState(false);\n\n  function buttonsFilters(param) {\n    if (param === 'all') {\n      setFilterRecipes(doneRecipes && doneRecipes.filter(({\n        type\n      }) => type));\n    }\n\n    if (param === 'food') {\n      setFilterRecipes(doneRecipes && doneRecipes.filter(({\n        type\n      }) => type === 'comida'));\n    }\n\n    if (param === 'drinks') {\n      setFilterRecipes(doneRecipes && doneRecipes.filter(({\n        type\n      }) => type === 'bebida'));\n    }\n  }\n\n  function clipBoard(type, id) {\n    copy(`http://localhost:3000/${type}s/${id}`);\n\n    if (type === 'comida') {\n      setClipBoardFood(true);\n    }\n\n    if (type === 'bebida') {\n      setClipBoardDrink(true);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipes-done-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    title: \"Receitas Feitas\",\n    isSearch: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"filter-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"filter-by-all-btn\",\n    onClick: () => buttonsFilters('all'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"filter-by-food-btn\",\n    onClick: () => buttonsFilters('food'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Food\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"filter-by-drink-btn\",\n    onClick: () => buttonsFilters('drinks'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Drinks\")), filterRecipes && filterRecipes.map(({\n    id,\n    image,\n    category,\n    name,\n    doneDate,\n    tags,\n    type,\n    area,\n    alcoholicOrNot\n  }, index) => type === 'comida' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipe-done-section\",\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"images\",\n    src: image,\n    alt: \"imagem-receive\",\n    \"data-testid\": `${index}-horizontal-image`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"recipe-name\",\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 23\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, `${area} - ${category}`), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-done-date`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, doneDate), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-${tags[0]}-horizontal-tag`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, tags[0]), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-${tags[1]}-horizontal-tag`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, tags[1])), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-share-done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => clipBoard(type, id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    src: shareIcon,\n    alt: \"share button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, clipBoardFood === true ? 'Link copiado!' : null))) : /*#__PURE__*/React.createElement(\"div\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"images\",\n    src: image,\n    alt: \"imagem-receive\",\n    \"data-testid\": `${index}-horizontal-image`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }\n  }, alcoholicOrNot), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-done-date`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, doneDate), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-share-done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => clipBoard(type, id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    src: shareIcon,\n    alt: \"share button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, clipBoardDrink === true ? 'Link copiado!' : null)))));\n}","map":{"version":3,"sources":["/home/phlopes/Projetos/sd-010-a-project-recipes-app/src/pages/RecipesDone/index.js"],"names":["React","useState","copy","Link","Header","RecipesDone","doneRecipes","JSON","parse","localStorage","getItem","filterRecipes","setFilterRecipes","clipBoardFood","setClipBoardFood","clipBoardDrink","setClipBoardDrink","buttonsFilters","param","filter","type","clipBoard","id","map","image","category","name","doneDate","tags","area","alcoholicOrNot","index","shareIcon"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport copy from 'clipboard-copy';\nimport { Link } from 'react-router-dom';\nimport shareIcon from '../../images/shareIcon.svg';\nimport Header from '../../components/header';\nimport './index.css';\n\nexport default function RecipesDone() {\n  const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n\n  const [filterRecipes, setFilterRecipes] = useState(doneRecipes);\n  const [clipBoardFood, setClipBoardFood] = useState(false);\n  const [clipBoardDrink, setClipBoardDrink] = useState(false);\n\n  function buttonsFilters(param) {\n    if (param === 'all') {\n      setFilterRecipes(doneRecipes && doneRecipes.filter(({ type }) => type));\n    }\n    if (param === 'food') {\n      setFilterRecipes(doneRecipes\n        && doneRecipes.filter(({ type }) => type === 'comida'));\n    } if (param === 'drinks') {\n      setFilterRecipes(doneRecipes\n        && doneRecipes.filter(({ type }) => type === 'bebida'));\n    }\n  }\n\n  function clipBoard(type, id) {\n    copy(`http://localhost:3000/${type}s/${id}`);\n    if (type === 'comida') {\n      setClipBoardFood(true);\n    } if (type === 'bebida') {\n      setClipBoardDrink(true);\n    }\n  }\n\n  return (\n    <div className=\"recipes-done-container\">\n      <Header title=\"Receitas Feitas\" isSearch={ false } />\n      <nav className=\"filter-buttons\">\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          onClick={ () => buttonsFilters('all') }\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          onClick={ () => buttonsFilters('food') }\n        >\n          Food\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          onClick={ () => buttonsFilters('drinks') }\n        >\n          Drinks\n        </button>\n      </nav>\n      {filterRecipes && filterRecipes\n        .map(\n          ({ id, image, category, name, doneDate, tags, type,\n            area, alcoholicOrNot }, index) => (\n            type === 'comida'\n              ? (\n                <div\n                  className=\"recipe-done-section\"\n                  key={ id }\n                >\n                  <div className=\"card-info\">\n                    <Link to={ `/${type}s/${id}` }>\n                      <img\n                        className=\"images\"\n                        src={ image }\n                        alt=\"imagem-receive\"\n                        data-testid={ `${index}-horizontal-image` }\n                      />\n                      <p\n                        className=\"recipe-name\"\n                        data-testid={ `${index}-horizontal-name` }\n                      >\n                        {name}\n\n                      </p>\n                    </Link>\n                    <p data-testid={ `${index}-horizontal-top-text` }>\n                      {`${area} - ${category}`}\n                    </p>\n                    <p data-testid={ `${index}-horizontal-done-date` }>{doneDate}</p>\n                    <p data-testid={ `${index}-${tags[0]}-horizontal-tag` }>\n                      {tags[0]}\n                    </p>\n                    <p data-testid={ `${index}-${tags[1]}-horizontal-tag` }>\n                      {tags[1]}\n                    </p>\n                  </div>\n                  <div className=\"btn-share-done\">\n                    <button type=\"button\" onClick={ () => clipBoard(type, id) }>\n                      <img\n                        data-testid={ `${index}-horizontal-share-btn` }\n                        src={ shareIcon }\n                        alt=\"share button\"\n                      />\n                    </button>\n                    <span>{clipBoardFood === true ? 'Link copiado!' : null}</span>\n                  </div>\n                </div>)\n              : (\n                <div key={ id }>\n                  <Link to={ `/${type}s/${id}` }>\n                    <img\n                      className=\"images\"\n                      src={ image }\n                      alt=\"imagem-receive\"\n                      data-testid={ `${index}-horizontal-image` }\n                    />\n                    <p data-testid={ `${index}-horizontal-name` }>{name}</p>\n                  </Link>\n                  <p data-testid={ `${index}-horizontal-top-text` }>{alcoholicOrNot}</p>\n                  <p\n                    data-testid={ `${index}-horizontal-done-date` }\n                  >\n                    {doneDate}\n\n                  </p>\n\n                  <div className=\"btn-share-done\">\n                    <button\n                      type=\"button\"\n                      onClick={ () => clipBoard(type, id) }\n                    >\n                      <img\n                        data-testid={ `${index}-horizontal-share-btn` }\n                        src={ shareIcon }\n                        alt=\"share button\"\n                      />\n                    </button>\n                    <span>{clipBoardDrink === true ? 'Link copiado!' : null}</span>\n                  </div>\n                </div>)\n          ),\n        )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}