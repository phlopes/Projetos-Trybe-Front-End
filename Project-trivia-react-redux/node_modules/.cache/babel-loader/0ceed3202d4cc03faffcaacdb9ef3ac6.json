{"ast":null,"code":"import _objectSpread from \"/home/phlopes/Projetos/sd-010-a-project-trivia-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/phlopes/Projetos/sd-010-a-project-trivia-react-redux/src/components/Login.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { saveQuestionsThunk, loginActionThunk } from '../Redux/actions';\nimport { fetchToken } from '../services/Api';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      name: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async saveLocalStorage() {\n    const _ref = await fetchToken(),\n          token = _ref.token;\n\n    localStorage.setItem('token', token);\n    return token;\n  }\n\n  async handleClick() {\n    const _this$props = this.props,\n          login = _this$props.login,\n          save = _this$props.save;\n    const token = await this.saveLocalStorage();\n    login(_objectSpread({}, this.state, {\n      token\n    }));\n    const DEFAULT_AMOUNT = 5;\n    save(DEFAULT_AMOUNT, token);\n  }\n\n  render() {\n    const _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Nome:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      \"data-testid\": \"input-player-name\",\n      onChange: this.handleChange,\n      value: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      htmlFor: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Email:\", React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      \"data-testid\": \"input-gravatar-email\",\n      onChange: this.handleChange,\n      value: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(Link, {\n      to: \"/game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-play\",\n      disabled: !(email && name),\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Jogar\"))), React.createElement(Link, {\n      to: \"/settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Settings\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  token: state.loginReducer.token\n});\n\nconst mapDispatchToProps = dispatch => ({\n  login: state => dispatch(loginActionThunk(state)),\n  save: (amount, token) => dispatch(saveQuestionsThunk(amount, token))\n});\n\nLogin.propTypes = {\n  login: PropTypes.func\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/phlopes/Projetos/sd-010-a-project-trivia-react-redux/src/components/Login.jsx"],"names":["React","PropTypes","connect","Link","saveQuestionsThunk","loginActionThunk","fetchToken","Login","Component","constructor","state","email","name","handleChange","bind","handleClick","target","value","setState","saveLocalStorage","token","localStorage","setItem","props","login","save","DEFAULT_AMOUNT","render","mapStateToProps","loginReducer","mapDispatchToProps","dispatch","amount","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { saveQuestionsThunk, loginActionThunk } from '../Redux/actions';\nimport { fetchToken } from '../services/Api';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      name: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  async saveLocalStorage() {\n    const { token } = await fetchToken();\n    localStorage.setItem('token', token);\n    return token;\n  }\n\n  async handleClick() {\n    const { login, save } = this.props;\n    const token = await this.saveLocalStorage();\n    login({ ...this.state, token });\n    const DEFAULT_AMOUNT = 5;\n    save(DEFAULT_AMOUNT, token);\n  }\n\n  render() {\n    const { name, email } = this.state;\n    return (\n      <div>\n        <form>\n          <label htmlFor=\"name\">\n            Nome:\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              data-testid=\"input-player-name\"\n              onChange={this.handleChange}\n              value={name}\n            />\n          </label>\n          <label htmlFor=\"Email\">\n            Email:\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              data-testid=\"input-gravatar-email\"\n              onChange={this.handleChange}\n              value={email}\n            />\n          </label>\n          <Link to=\"/game\">\n            <button\n              type=\"button\"\n              data-testid=\"btn-play\"\n              disabled={!(email && name)}\n              onClick={this.handleClick}\n            >\n              Jogar\n            </button>\n          </Link>\n        </form>\n        <Link to=\"/settings\">\n          <button type=\"button\" data-testid=\"btn-settings\">\n            Settings\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  token: state.loginReducer.token,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (state) => dispatch(loginActionThunk(state)),\n  save: (amount, token) => dispatch(saveQuestionsThunk(amount, token)),\n});\n\nLogin.propTypes = {\n  login: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}