{"ast":null,"code":"import _objectSpread from \"/home/phlopes/Projetos/sd-010-a-project-trivia-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { SUM_SCORE } from '../actions';\nconst INITIAL_STATE = {\n  total: 0\n};\n\nconst calcScore = payload => {\n  let difficulty = 1;\n  const mediumDifficulty = 2;\n  const hardDifficulty = 3;\n  if (payload.difficulty === 'medium') difficulty = mediumDifficulty;\n  if (payload.difficulty === 'hard') difficulty = hardDifficulty;\n  return payload.seconds * difficulty;\n};\n\nconst saveLocalStorage = score => {\n  const _JSON$parse = JSON.parse(localStorage.getItem('state')),\n        player = _JSON$parse.player;\n\n  const object = {\n    player: {\n      name: player.name,\n      gravatarEmail: player.gravatarEmail,\n      assertions: player.assertions + 1,\n      score: player.score + score\n    }\n  };\n  localStorage.setItem('state', JSON.stringify(object));\n};\n\nconst scoreReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SUM_SCORE:\n      {\n        const score = calcScore(action.payload);\n        saveLocalStorage(score);\n        return _objectSpread({}, state, {\n          total: state.total + score\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default scoreReducer;","map":{"version":3,"sources":["/home/phlopes/Projetos/sd-010-a-project-trivia-react-redux/src/Redux/reducers/score.js"],"names":["SUM_SCORE","INITIAL_STATE","total","calcScore","payload","difficulty","mediumDifficulty","hardDifficulty","seconds","saveLocalStorage","score","JSON","parse","localStorage","getItem","player","object","name","gravatarEmail","assertions","setItem","stringify","scoreReducer","state","action","type"],"mappings":";AAAA,SAASA,SAAT,QAA0B,YAA1B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE;AADa,CAAtB;;AAIA,MAAMC,SAAS,GAAIC,OAAD,IAAa;AAC7B,MAAIC,UAAU,GAAG,CAAjB;AACA,QAAMC,gBAAgB,GAAG,CAAzB;AACA,QAAMC,cAAc,GAAG,CAAvB;AACA,MAAIH,OAAO,CAACC,UAAR,KAAuB,QAA3B,EAAqCA,UAAU,GAAGC,gBAAb;AACrC,MAAIF,OAAO,CAACC,UAAR,KAAuB,MAA3B,EAAmCA,UAAU,GAAGE,cAAb;AACnC,SAAOH,OAAO,CAACI,OAAR,GAAkBH,UAAzB;AACD,CAPD;;AASA,MAAMI,gBAAgB,GAAIC,KAAD,IAAW;AAAA,sBACfC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CADe;AAAA,QAC1BC,MAD0B,eAC1BA,MAD0B;;AAElC,QAAMC,MAAM,GAAG;AAAED,IAAAA,MAAM,EAAE;AACvBE,MAAAA,IAAI,EAAEF,MAAM,CAACE,IADU;AAEvBC,MAAAA,aAAa,EAAEH,MAAM,CAACG,aAFC;AAGvBC,MAAAA,UAAU,EAAEJ,MAAM,CAACI,UAAP,GAAoB,CAHT;AAIvBT,MAAAA,KAAK,EAAEK,MAAM,CAACL,KAAP,GAAeA;AAJC;AAAV,GAAf;AAOAG,EAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BT,IAAI,CAACU,SAAL,CAAeL,MAAf,CAA9B;AACD,CAVD;;AAYA,MAAMM,YAAY,GAAG,CAACC,KAAK,GAAGtB,aAAT,EAAwBuB,MAAxB,KAAmC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKzB,SAAL;AAAgB;AACd,cAAMU,KAAK,GAAGP,SAAS,CAACqB,MAAM,CAACpB,OAAR,CAAvB;AACAK,QAAAA,gBAAgB,CAACC,KAAD,CAAhB;AACA,iCACKa,KADL;AAEErB,UAAAA,KAAK,EAAEqB,KAAK,CAACrB,KAAN,GAAcQ;AAFvB;AAID;;AACD;AACE,aAAOa,KAAP;AAVF;AAYD,CAbD;;AAeA,eAAeD,YAAf","sourcesContent":["import { SUM_SCORE } from '../actions';\n\nconst INITIAL_STATE = {\n  total: 0,\n};\n\nconst calcScore = (payload) => {\n  let difficulty = 1;\n  const mediumDifficulty = 2;\n  const hardDifficulty = 3;\n  if (payload.difficulty === 'medium') difficulty = mediumDifficulty;\n  if (payload.difficulty === 'hard') difficulty = hardDifficulty;\n  return payload.seconds * difficulty;\n};\n\nconst saveLocalStorage = (score) => {\n  const { player } = JSON.parse(localStorage.getItem('state'));\n  const object = { player: {\n    name: player.name,\n    gravatarEmail: player.gravatarEmail,\n    assertions: player.assertions + 1,\n    score: player.score + score,\n  } };\n\n  localStorage.setItem('state', JSON.stringify(object));\n};\n\nconst scoreReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SUM_SCORE: {\n    const score = calcScore(action.payload);\n    saveLocalStorage(score);\n    return {\n      ...state,\n      total: state.total + score,\n    };\n  }\n  default:\n    return state;\n  }\n};\n\nexport default scoreReducer;\n"]},"metadata":{},"sourceType":"module"}