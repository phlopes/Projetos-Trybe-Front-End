{"ast":null,"code":"var _jsxFileName = \"/home/phlopes/Projetos/sd-010-a-project-trivia-react-redux/src/components/Header.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport md5 from 'crypto-js/md5';\nimport { connect } from 'react-redux';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      emailHash: ''\n    };\n    this.setEmailHash = this.setEmailHash.bind(this);\n  }\n\n  componentDidMount() {\n    this.setEmailHash();\n  }\n\n  setEmailHash() {\n    const email = this.props.email;\n    this.setState({\n      emailHash: md5(email).toString()\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          name = _this$props.name,\n          _this$props$score = _this$props.score,\n          score = _this$props$score === void 0 ? 0 : _this$props$score;\n    const emailHash = this.state.emailHash;\n    return React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      \"data-testid\": \"header-profile-picture\",\n      alt: \"Avatar-do-usuario\",\n      src: `https://www.gravatar.com/avatar/${emailHash}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      \"data-testid\": \"header-player-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      \"data-testid\": \"header-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, score));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  name: state.loginReducer.name,\n  email: state.loginReducer.email,\n  score: state.scoreReducer.total\n});\n\nHeader.propTypes = {\n  email: PropTypes.string,\n  name: PropTypes.string\n}.isRequired;\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["/home/phlopes/Projetos/sd-010-a-project-trivia-react-redux/src/components/Header.jsx"],"names":["React","PropTypes","md5","connect","Header","Component","constructor","state","emailHash","setEmailHash","bind","componentDidMount","email","props","setState","toString","render","name","score","mapStateToProps","loginReducer","scoreReducer","total","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,YAAL;AACD;;AAEDA,EAAAA,YAAY,GAAG;AAAA,UACLG,KADK,GACK,KAAKC,KADV,CACLD,KADK;AAEb,SAAKE,QAAL,CAAc;AACZN,MAAAA,SAAS,EAAEN,GAAG,CAACU,KAAD,CAAH,CAAWG,QAAX;AADC,KAAd;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBACqB,KAAKH,KAD1B;AAAA,UACCI,IADD,eACCA,IADD;AAAA,0CACOC,KADP;AAAA,UACOA,KADP,kCACe,CADf;AAAA,UAECV,SAFD,GAEe,KAAKD,KAFpB,CAECC,SAFD;AAGP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,qBAAY,wBADd;AAEE,MAAA,GAAG,EAAC,mBAFN;AAGE,MAAA,GAAG,EAAI,mCAAkCA,SAAU,EAHrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AAAG,qBAAY,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCS,IAArC,CANF,EAOE;AAAG,qBAAY,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BC,KAA/B,CAPF,CADF;AAWD;;AAlCkC;;AAqCrC,MAAMC,eAAe,GAAIZ,KAAD,KAAY;AAClCU,EAAAA,IAAI,EAAEV,KAAK,CAACa,YAAN,CAAmBH,IADS;AAElCL,EAAAA,KAAK,EAAEL,KAAK,CAACa,YAAN,CAAmBR,KAFQ;AAGlCM,EAAAA,KAAK,EAAEX,KAAK,CAACc,YAAN,CAAmBC;AAHQ,CAAZ,CAAxB;;AAMAlB,MAAM,CAACmB,SAAP,GAAmB;AACjBX,EAAAA,KAAK,EAAEX,SAAS,CAACuB,MADA;AAEjBP,EAAAA,IAAI,EAAEhB,SAAS,CAACuB;AAFC,EAGjBC,UAHF;AAKA,eAAetB,OAAO,CAACgB,eAAD,CAAP,CAAyBf,MAAzB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport md5 from 'crypto-js/md5';\nimport { connect } from 'react-redux';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      emailHash: '',\n    };\n    this.setEmailHash = this.setEmailHash.bind(this);\n  }\n\n  componentDidMount() {\n    this.setEmailHash();\n  }\n\n  setEmailHash() {\n    const { email } = this.props;\n    this.setState({\n      emailHash: md5(email).toString(),\n    });\n  }\n\n  render() {\n    const { name, score = 0 } = this.props;\n    const { emailHash } = this.state;\n    return (\n      <header>\n        <img\n          data-testid=\"header-profile-picture\"\n          alt=\"Avatar-do-usuario\"\n          src={ `https://www.gravatar.com/avatar/${emailHash}` }\n        />\n        <p data-testid=\"header-player-name\">{name}</p>\n        <p data-testid=\"header-score\">{score}</p>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  name: state.loginReducer.name,\n  email: state.loginReducer.email,\n  score: state.scoreReducer.total,\n});\n\nHeader.propTypes = {\n  email: PropTypes.string,\n  name: PropTypes.string,\n}.isRequired;\n\nexport default connect(mapStateToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}