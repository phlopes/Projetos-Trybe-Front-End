{"ast":null,"code":"var _jsxFileName = \"/home/phlopes/Projetos/sd-010-a-project-trivia-react-redux/src/components/Header.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport md5 from 'crypto-js/md5';\nimport { connect } from 'react-redux';\nimport { setPicturePath } from '../Redux/actions';\nimport '../styles/header.css';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      emailHash: ''\n    };\n    this.setEmailHash = this.setEmailHash.bind(this);\n  }\n\n  componentDidMount() {\n    this.setEmailHash();\n  }\n\n  setEmailHash() {\n    const _this$props = this.props,\n          email = _this$props.email,\n          setPicture = _this$props.setPicture;\n    this.setState({\n      emailHash: md5(email).toString()\n    }, () => {\n      const emailHash = this.state.emailHash;\n      setPicture(`https://www.gravatar.com/avatar/${emailHash}`);\n    });\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          name = _this$props2.name,\n          _this$props2$score = _this$props2.score,\n          score = _this$props2$score === void 0 ? 0 : _this$props2$score;\n    const emailHash = this.state.emailHash;\n    return React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      \"data-testid\": \"header-profile-picture\",\n      alt: \"Avatar-do-usuario\",\n      src: `https://www.gravatar.com/avatar/${emailHash}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"center-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"TRIVIA GAME\"))), React.createElement(\"div\", {\n      className: \"right-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      \"data-testid\": \"header-player-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      \"data-testid\": \"header-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, score)));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setPicture: url => dispatch(setPicturePath(url))\n});\n\nconst mapStateToProps = state => ({\n  name: state.loginReducer.name,\n  email: state.loginReducer.email,\n  score: state.scoreReducer.total\n});\n\nHeader.propTypes = {\n  email: PropTypes.string,\n  name: PropTypes.string\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/home/phlopes/Projetos/sd-010-a-project-trivia-react-redux/src/components/Header.jsx"],"names":["React","PropTypes","md5","connect","setPicturePath","Header","Component","constructor","state","emailHash","setEmailHash","bind","componentDidMount","props","email","setPicture","setState","toString","render","name","score","mapDispatchToProps","dispatch","url","mapStateToProps","loginReducer","scoreReducer","total","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAO,sBAAP;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,YAAL;AACD;;AAEDA,EAAAA,YAAY,GAAG;AAAA,wBACiB,KAAKG,KADtB;AAAA,UACLC,KADK,eACLA,KADK;AAAA,UACEC,UADF,eACEA,UADF;AAEb,SAAKC,QAAL,CAAc;AACZP,MAAAA,SAAS,EAAEP,GAAG,CAACY,KAAD,CAAH,CAAWG,QAAX;AADC,KAAd,EAEG,MAAM;AAAA,YACCR,SADD,GACe,KAAKD,KADpB,CACCC,SADD;AAEPM,MAAAA,UAAU,CAAE,mCAAkCN,SAAU,EAA9C,CAAV;AACD,KALD;AAMD;;AAEDS,EAAAA,MAAM,GAAG;AAAA,yBACqB,KAAKL,KAD1B;AAAA,UACCM,IADD,gBACCA,IADD;AAAA,4CACOC,KADP;AAAA,UACOA,KADP,mCACe,CADf;AAAA,UAECX,SAFD,GAEe,KAAKD,KAFpB,CAECC,SAFD;AAGP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,qBAAY,wBADd;AAEE,MAAA,GAAG,EAAC,mBAFN;AAGE,MAAA,GAAG,EAAI,mCAAkCA,SAAU,EAHrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAQE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAH,CADF,CARF,EAWE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,qBAAY,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCU,IAArC,CADF,EAEE;AAAG,qBAAY,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BC,KAA/B,CAFF,CAXF,CADF;AAkBD;;AA5CkC;;AA+CrC,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCP,EAAAA,UAAU,EAAGQ,GAAD,IAASD,QAAQ,CAAClB,cAAc,CAACmB,GAAD,CAAf;AADW,CAAf,CAA3B;;AAIA,MAAMC,eAAe,GAAIhB,KAAD,KAAY;AAClCW,EAAAA,IAAI,EAAEX,KAAK,CAACiB,YAAN,CAAmBN,IADS;AAElCL,EAAAA,KAAK,EAAEN,KAAK,CAACiB,YAAN,CAAmBX,KAFQ;AAGlCM,EAAAA,KAAK,EAAEZ,KAAK,CAACkB,YAAN,CAAmBC;AAHQ,CAAZ,CAAxB;;AAMAtB,MAAM,CAACuB,SAAP,GAAmB;AACjBd,EAAAA,KAAK,EAAEb,SAAS,CAAC4B,MADA;AAEjBV,EAAAA,IAAI,EAAElB,SAAS,CAAC4B;AAFC,EAGjBC,UAHF;AAKA,eAAe3B,OAAO,CAACqB,eAAD,EAAkBH,kBAAlB,CAAP,CAA6ChB,MAA7C,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport md5 from 'crypto-js/md5';\nimport { connect } from 'react-redux';\nimport { setPicturePath } from '../Redux/actions';\nimport '../styles/header.css';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      emailHash: '',\n    };\n    this.setEmailHash = this.setEmailHash.bind(this);\n  }\n\n  componentDidMount() {\n    this.setEmailHash();\n  }\n\n  setEmailHash() {\n    const { email, setPicture } = this.props;\n    this.setState({\n      emailHash: md5(email).toString(),\n    }, () => {\n      const { emailHash } = this.state;\n      setPicture(`https://www.gravatar.com/avatar/${emailHash}`);\n    });\n  }\n\n  render() {\n    const { name, score = 0 } = this.props;\n    const { emailHash } = this.state;\n    return (\n      <header>\n        <div className=\"left-container\">\n          <img\n            data-testid=\"header-profile-picture\"\n            alt=\"Avatar-do-usuario\"\n            src={ `https://www.gravatar.com/avatar/${emailHash}` }\n          />\n        </div>\n        <div className=\"center-container\">\n          <p><b>TRIVIA GAME</b></p>\n        </div>\n        <div className=\"right-container\">\n          <p data-testid=\"header-player-name\">{name}</p>\n          <p data-testid=\"header-score\">{score}</p>\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  setPicture: (url) => dispatch(setPicturePath(url)),\n});\n\nconst mapStateToProps = (state) => ({\n  name: state.loginReducer.name,\n  email: state.loginReducer.email,\n  score: state.scoreReducer.total,\n});\n\nHeader.propTypes = {\n  email: PropTypes.string,\n  name: PropTypes.string,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}