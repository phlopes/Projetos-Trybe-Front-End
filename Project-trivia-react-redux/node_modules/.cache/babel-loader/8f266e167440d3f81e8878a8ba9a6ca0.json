{"ast":null,"code":"var _jsxFileName = \"/home/phlopes/Projetos/sd-010-a-project-trivia-react-redux/src/components/ScreenGame.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport TriviaCard from './TriviaCard';\nimport { nextIndexAction } from '../Redux/actions';\nimport '../styles/ScreenGame.css';\n\nclass ScreenGame extends React.Component {\n  constructor() {\n    super();\n    this.verifyClicked = this.verifyClicked.bind(this);\n    this.verifySeconds = this.verifySeconds.bind(this);\n    this.state = {\n      clicked: false,\n      conditionTime: false\n    };\n  }\n\n  verifyClicked(boolean) {\n    this.setState({\n      clicked: boolean\n    });\n  }\n\n  verifySeconds(boolean) {\n    this.setState({\n      conditionTime: boolean\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          clicked = _this$state.clicked,\n          conditionTime = _this$state.conditionTime;\n    const _this$props = this.props,\n          results = _this$props.results,\n          index = _this$props.index,\n          next = _this$props.next;\n    return React.createElement(\"div\", {\n      className: \"game_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), results.length > 0 && React.createElement(TriviaCard, {\n      verifySeconds: this.verifySeconds,\n      verifyClicked: this.verifyClicked,\n      result: results[index],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"game_btn_next_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, (clicked || conditionTime) && React.createElement(\"button\", {\n      className: \"game_btn_next\",\n      \"data-testid\": \"btn-next\",\n      type: \"button\",\n      onClick: () => next(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Pr\\xF3xima pergunta\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  results: state.saveQuestions.questions,\n  index: state.saveQuestions.index\n});\n\nconst mapDispatchToProps = dispatch => ({\n  next: () => dispatch(nextIndexAction())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreenGame);\nScreenGame.propTypes = {\n  results: PropTypes.arrayOf(PropTypes.object).isRequired,\n  index: PropTypes.number.isRequired,\n  next: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/phlopes/Projetos/sd-010-a-project-trivia-react-redux/src/components/ScreenGame.jsx"],"names":["React","PropTypes","connect","Header","TriviaCard","nextIndexAction","ScreenGame","Component","constructor","verifyClicked","bind","verifySeconds","state","clicked","conditionTime","boolean","setState","render","props","results","index","next","length","mapStateToProps","saveQuestions","questions","mapDispatchToProps","dispatch","propTypes","arrayOf","object","isRequired","number","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,OAAO,0BAAP;;AAEA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AAEA,SAAKE,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,aAAa,EAAE;AAFJ,KAAb;AAID;;AAEDL,EAAAA,aAAa,CAACM,OAAD,EAAU;AACrB,SAAKC,QAAL,CAAc;AAAEH,MAAAA,OAAO,EAAEE;AAAX,KAAd;AACD;;AAEDJ,EAAAA,aAAa,CAACI,OAAD,EAAU;AACrB,SAAKC,QAAL,CAAc;AAAEF,MAAAA,aAAa,EAAEC;AAAjB,KAAd;AACD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,wBAC4B,KAAKL,KADjC;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUC,aADV,eACUA,aADV;AAAA,wBAE0B,KAAKI,KAF/B;AAAA,UAECC,OAFD,eAECA,OAFD;AAAA,UAEUC,KAFV,eAEUA,KAFV;AAAA,UAEiBC,IAFjB,eAEiBA,IAFjB;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGF,OAAO,CAACG,MAAR,GAAiB,CAAjB,IACC,oBAAC,UAAD;AACE,MAAA,aAAa,EAAG,KAAKX,aADvB;AAEE,MAAA,aAAa,EAAG,KAAKF,aAFvB;AAGE,MAAA,MAAM,EAAGU,OAAO,CAACC,KAAD,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EASE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACP,OAAO,IAAIC,aAAZ,KACC;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,qBAAY,UAFd;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,OAAO,EAAG,MAAMO,IAAI,EAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,CATF,CADF;AAyBD;;AAjDsC;;AAoDzC,MAAME,eAAe,GAAIX,KAAD,KAAY;AAClCO,EAAAA,OAAO,EAAEP,KAAK,CAACY,aAAN,CAAoBC,SADK;AAElCL,EAAAA,KAAK,EAAER,KAAK,CAACY,aAAN,CAAoBJ;AAFO,CAAZ,CAAxB;;AAKA,MAAMM,kBAAkB,GAAIC,QAAD,KAAe;AACxCN,EAAAA,IAAI,EAAE,MAAMM,QAAQ,CAACtB,eAAe,EAAhB;AADoB,CAAf,CAA3B;;AAIA,eAAeH,OAAO,CAACqB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CpB,UAA7C,CAAf;AAEAA,UAAU,CAACsB,SAAX,GAAuB;AACrBT,EAAAA,OAAO,EAAElB,SAAS,CAAC4B,OAAV,CAAkB5B,SAAS,CAAC6B,MAA5B,EAAoCC,UADxB;AAErBX,EAAAA,KAAK,EAAEnB,SAAS,CAAC+B,MAAV,CAAiBD,UAFH;AAGrBV,EAAAA,IAAI,EAAEpB,SAAS,CAACgC,IAAV,CAAeF;AAHA,CAAvB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport TriviaCard from './TriviaCard';\nimport { nextIndexAction } from '../Redux/actions';\nimport '../styles/ScreenGame.css';\n\nclass ScreenGame extends React.Component {\n  constructor() {\n    super();\n\n    this.verifyClicked = this.verifyClicked.bind(this);\n    this.verifySeconds = this.verifySeconds.bind(this);\n\n    this.state = {\n      clicked: false,\n      conditionTime: false,\n    };\n  }\n\n  verifyClicked(boolean) {\n    this.setState({ clicked: boolean });\n  }\n\n  verifySeconds(boolean) {\n    this.setState({ conditionTime: boolean });\n  }\n\n  render() {\n    const { clicked, conditionTime } = this.state;\n    const { results, index, next } = this.props;\n    return (\n      <div className=\"game_container\">\n        <Header />\n        {results.length > 0 && (\n          <TriviaCard\n            verifySeconds={ this.verifySeconds }\n            verifyClicked={ this.verifyClicked }\n            result={ results[index] }\n          />\n        )}\n        <div className=\"game_btn_next_container\">\n          {(clicked || conditionTime) && (\n            <button\n              className=\"game_btn_next\"\n              data-testid=\"btn-next\"\n              type=\"button\"\n              onClick={ () => next() }\n            >\n              Pr√≥xima pergunta\n            </button>\n          )}\n        </div>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  results: state.saveQuestions.questions,\n  index: state.saveQuestions.index,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  next: () => dispatch(nextIndexAction()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreenGame);\n\nScreenGame.propTypes = {\n  results: PropTypes.arrayOf(PropTypes.object).isRequired,\n  index: PropTypes.number.isRequired,\n  next: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}