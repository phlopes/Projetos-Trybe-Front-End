{"ast":null,"code":"import _objectSpread from \"/home/phlopes/Projetos/sd-010-a-project-trivia-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { fetchTrivia, fetchToken } from '../../services/Api';\nexport const LOGIN = 'LOGIN';\nexport const SAVE_QUESTIONS_SUCCESS = 'SAVE_QUESTIONS_SUCCESS';\nexport const SAVE_QUESTIONS_ERROR = 'SAVE_QUESTIONS_ERROR';\nexport const SAVE_TOKEN = 'SAVE_';\nexport const loginAction = payload => ({\n  type: LOGIN,\n  payload\n});\n\nconst saveQuestionsSuccess = payload => ({\n  type: SAVE_QUESTIONS_SUCCESS,\n  payload\n});\n\nconst saveQuestionsError = payload => ({\n  type: SAVE_QUESTIONS_ERROR,\n  payload\n});\n\nexport const saveQuestionsThunk = (amount, token) => async dispatch => {\n  try {\n    const results = await fetchTrivia(amount, token);\n    dispatch(saveQuestionsSuccess(results));\n  } catch (error) {\n    dispatch(saveQuestionsError(error));\n  }\n};\nexport const loginActionThunk = payload => async dispatch => {\n  const _ref = await fetchToken(),\n        token = _ref.token;\n\n  dispatch(loginAction(_objectSpread({}, payload, {\n    token\n  })));\n};","map":{"version":3,"sources":["/home/phlopes/Projetos/sd-010-a-project-trivia-react-redux/src/Redux/actions/index.js"],"names":["fetchTrivia","fetchToken","LOGIN","SAVE_QUESTIONS_SUCCESS","SAVE_QUESTIONS_ERROR","SAVE_TOKEN","loginAction","payload","type","saveQuestionsSuccess","saveQuestionsError","saveQuestionsThunk","amount","token","dispatch","results","error","loginActionThunk"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAwC,oBAAxC;AAEA,OAAO,MAAMC,KAAK,GAAG,OAAd;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,MAAMC,UAAU,GAAG,OAAnB;AAEP,OAAO,MAAMC,WAAW,GAAIC,OAAD,KAAc;AACvCC,EAAAA,IAAI,EAAEN,KADiC;AAEvCK,EAAAA;AAFuC,CAAd,CAApB;;AAKP,MAAME,oBAAoB,GAAIF,OAAD,KAAc;AACzCC,EAAAA,IAAI,EAAEL,sBADmC;AAEzCI,EAAAA;AAFyC,CAAd,CAA7B;;AAKA,MAAMG,kBAAkB,GAAIH,OAAD,KAAc;AACvCC,EAAAA,IAAI,EAAEJ,oBADiC;AAEvCG,EAAAA;AAFuC,CAAd,CAA3B;;AAKA,OAAO,MAAMI,kBAAkB,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB,MAAOC,QAAP,IAAoB;AACvE,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMf,WAAW,CAACY,MAAD,EAASC,KAAT,CAAjC;AACAC,IAAAA,QAAQ,CAACL,oBAAoB,CAACM,OAAD,CAArB,CAAR;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdF,IAAAA,QAAQ,CAACJ,kBAAkB,CAACM,KAAD,CAAnB,CAAR;AACD;AACF,CAPM;AASP,OAAO,MAAMC,gBAAgB,GAAIV,OAAD,IAAa,MAAOO,QAAP,IAAoB;AAAA,eAC7C,MAAMb,UAAU,EAD6B;AAAA,QACvDY,KADuD,QACvDA,KADuD;;AAE/DC,EAAAA,QAAQ,CAACR,WAAW,mBAAMC,OAAN;AAAeM,IAAAA;AAAf,KAAZ,CAAR;AACD,CAHM","sourcesContent":["import { fetchTrivia, fetchToken } from '../../services/Api';\n\nexport const LOGIN = 'LOGIN';\nexport const SAVE_QUESTIONS_SUCCESS = 'SAVE_QUESTIONS_SUCCESS';\nexport const SAVE_QUESTIONS_ERROR = 'SAVE_QUESTIONS_ERROR';\n\nexport const SAVE_TOKEN = 'SAVE_';\n\nexport const loginAction = (payload) => ({\n  type: LOGIN,\n  payload,\n});\n\nconst saveQuestionsSuccess = (payload) => ({\n  type: SAVE_QUESTIONS_SUCCESS,\n  payload,\n});\n\nconst saveQuestionsError = (payload) => ({\n  type: SAVE_QUESTIONS_ERROR,\n  payload,\n});\n\nexport const saveQuestionsThunk = (amount, token) => async (dispatch) => {\n  try {\n    const results = await fetchTrivia(amount, token);\n    dispatch(saveQuestionsSuccess(results));\n  } catch (error) {\n    dispatch(saveQuestionsError(error));\n  }\n};\n\nexport const loginActionThunk = (payload) => async (dispatch) => {\n  const { token } = await fetchToken();\n  dispatch(loginAction({ ...payload, token }));\n};\n"]},"metadata":{},"sourceType":"module"}