{"ast":null,"code":"var _jsxFileName = \"/home/phlopes/Projetos/sd-010-a-project-trivia-react-redux/src/components/TriviaCard.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/triviaCard.css';\n\nclass TriviaCard extends Component {\n  componentDidUpdate() {\n    const wrongAnswers = document.querySelectorAll('.wrong-answers');\n    const correctAnswer = document.getElementById('correct-answer');\n    wrongAnswers.forEach(button => {\n      button.classList.remove('incorrect');\n    });\n    correctAnswer.classList.remove('correct');\n  }\n\n  verifyAnswers() {\n    const wrongAnswers = document.querySelectorAll('.wrong-answers');\n    const correctAnswer = document.getElementById('correct-answer');\n    correctAnswer.classList.add('correct');\n    wrongAnswers.forEach(button => {\n      button.classList.add('incorrect');\n    });\n  }\n\n  render() {\n    const _this$props$result = this.props.result,\n          category = _this$props$result.category,\n          question = _this$props$result.question,\n          correctAnswer = _this$props$result.correct_answer,\n          incorrectAnswers = _this$props$result.incorrect_answers;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      \"data-testid\": \"question-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, category), React.createElement(\"h2\", {\n      \"data-testid\": \"question-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, question), React.createElement(\"button\", {\n      className: \"questions-buttons\",\n      type: \"button\",\n      id: \"correct-answer\",\n      \"data-testid\": \"correct-answer\",\n      onClick: e => this.verifyAnswers(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, correctAnswer), incorrectAnswers.map((answer, index) => React.createElement(\"button\", {\n      className: \"wrong-answers\",\n      type: \"button\",\n      \"data-testid\": `wrong-answer-${index}`,\n      key: answer,\n      onClick: e => this.verifyAnswers(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, answer)));\n  }\n\n}\n\nTriviaCard.propTypes = {\n  result: PropTypes.shape({\n    category: PropTypes.string,\n    question: PropTypes.string\n  })\n}.isRequired;\nexport default TriviaCard;","map":{"version":3,"sources":["/home/phlopes/Projetos/sd-010-a-project-trivia-react-redux/src/components/TriviaCard.jsx"],"names":["React","Component","PropTypes","TriviaCard","componentDidUpdate","wrongAnswers","document","querySelectorAll","correctAnswer","getElementById","forEach","button","classList","remove","verifyAnswers","add","render","props","result","category","question","correct_answer","incorrectAnswers","incorrect_answers","e","map","answer","index","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,0BAAP;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AACjCG,EAAAA,kBAAkB,GAAG;AACnB,UAAMC,YAAY,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,gBAA1B,CAArB;AACA,UAAMC,aAAa,GAAGF,QAAQ,CAACG,cAAT,CAAwB,gBAAxB,CAAtB;AACAJ,IAAAA,YAAY,CAACK,OAAb,CAAsBC,MAAD,IAAY;AAC/BA,MAAAA,MAAM,CAACC,SAAP,CAAiBC,MAAjB,CAAwB,WAAxB;AACD,KAFD;AAGAL,IAAAA,aAAa,CAACI,SAAd,CAAwBC,MAAxB,CAA+B,SAA/B;AACD;;AAEDC,EAAAA,aAAa,GAAG;AACd,UAAMT,YAAY,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,gBAA1B,CAArB;AACA,UAAMC,aAAa,GAAGF,QAAQ,CAACG,cAAT,CAAwB,gBAAxB,CAAtB;AACAD,IAAAA,aAAa,CAACI,SAAd,CAAwBG,GAAxB,CAA4B,SAA5B;AACAV,IAAAA,YAAY,CAACK,OAAb,CAAsBC,MAAD,IAAY;AAC/BA,MAAAA,MAAM,CAACC,SAAP,CAAiBG,GAAjB,CAAqB,WAArB;AACD,KAFD;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,+BAQH,KAAKC,KARF,CAELC,MAFK;AAAA,UAGHC,QAHG,sBAGHA,QAHG;AAAA,UAIHC,QAJG,sBAIHA,QAJG;AAAA,UAKaZ,aALb,sBAKHa,cALG;AAAA,UAMgBC,gBANhB,sBAMHC,iBANG;AASP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,qBAAY,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCJ,QAArC,CADF,EAEE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCC,QAAjC,CAFF,EAGE;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,EAAE,EAAC,gBAHL;AAIE,qBAAY,gBAJd;AAKE,MAAA,OAAO,EAAII,CAAD,IAAO,KAAKV,aAAL,CAAmBU,CAAnB,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGhB,aAPH,CAHF,EAYGc,gBAAgB,CAACG,GAAjB,CAAqB,CAACC,MAAD,EAASC,KAAT,KACpB;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,qBAAe,gBAAeA,KAAM,EAHtC;AAIE,MAAA,GAAG,EAAGD,MAJR;AAKE,MAAA,OAAO,EAAIF,CAAD,IAAO,KAAKV,aAAL,CAAmBU,CAAnB,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGE,MAPH,CADD,CAZH,CADF;AA0BD;;AAtDgC;;AAyDnCvB,UAAU,CAACyB,SAAX,GAAuB;AACrBV,EAAAA,MAAM,EAAEhB,SAAS,CAAC2B,KAAV,CAAgB;AACtBV,IAAAA,QAAQ,EAAEjB,SAAS,CAAC4B,MADE;AAEtBV,IAAAA,QAAQ,EAAElB,SAAS,CAAC4B;AAFE,GAAhB;AADa,EAKrBC,UALF;AAMA,eAAe5B,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/triviaCard.css';\n\nclass TriviaCard extends Component {\n  componentDidUpdate() {\n    const wrongAnswers = document.querySelectorAll('.wrong-answers');\n    const correctAnswer = document.getElementById('correct-answer');\n    wrongAnswers.forEach((button) => {\n      button.classList.remove('incorrect');\n    });\n    correctAnswer.classList.remove('correct');\n  }\n\n  verifyAnswers() {\n    const wrongAnswers = document.querySelectorAll('.wrong-answers');\n    const correctAnswer = document.getElementById('correct-answer');\n    correctAnswer.classList.add('correct');\n    wrongAnswers.forEach((button) => {\n      button.classList.add('incorrect');\n    });\n  }\n\n  render() {\n    const {\n      result: {\n        category,\n        question,\n        correct_answer: correctAnswer,\n        incorrect_answers: incorrectAnswers,\n      },\n    } = this.props;\n    return (\n      <div>\n        <h1 data-testid=\"question-category\">{category}</h1>\n        <h2 data-testid=\"question-text\">{question}</h2>\n        <button\n          className=\"questions-buttons\"\n          type=\"button\"\n          id=\"correct-answer\"\n          data-testid=\"correct-answer\"\n          onClick={ (e) => this.verifyAnswers(e) }\n        >\n          {correctAnswer}\n        </button>\n        {incorrectAnswers.map((answer, index) => (\n          <button\n            className=\"wrong-answers\"\n            type=\"button\"\n            data-testid={ `wrong-answer-${index}` }\n            key={ answer }\n            onClick={ (e) => this.verifyAnswers(e) }\n          >\n            {answer}\n          </button>\n        ))}\n      </div>\n    );\n  }\n}\n\nTriviaCard.propTypes = {\n  result: PropTypes.shape({\n    category: PropTypes.string,\n    question: PropTypes.string,\n  }),\n}.isRequired;\nexport default TriviaCard;\n"]},"metadata":{},"sourceType":"module"}