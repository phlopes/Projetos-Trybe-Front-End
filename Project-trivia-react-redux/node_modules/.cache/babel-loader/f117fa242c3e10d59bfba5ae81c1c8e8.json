{"ast":null,"code":"var _jsxFileName = \"/home/phlopes/Projetos/sd-010-a-project-trivia-react-redux/src/components/ScreenGame.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport TriviaCard from './TriviaCard';\nimport { nextIndexAction } from '../Redux/actions';\n\nclass ScreenGame extends React.Component {\n  constructor() {\n    super();\n    this.verifyClicked = this.verifyClicked.bind(this);\n    this.state = {\n      clicked: false\n    };\n  }\n\n  verifyClicked() {\n    this.setState({\n      clicked: true\n    });\n  }\n\n  render() {\n    const clicked = this.state.clicked;\n    const _this$props = this.props,\n          results = _this$props.results,\n          index = _this$props.index,\n          next = _this$props.next;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), results.length > 0 && React.createElement(TriviaCard, {\n      verifyClicked: this.verifyClicked,\n      result: results[index],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), clicked && React.createElement(\"button\", {\n      \"data-testid\": \"btn-next\",\n      type: \"button\",\n      onClick: () => next(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Proximo\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  results: state.saveQuestions.questions,\n  index: state.saveQuestions.index\n});\n\nconst mapDispatchToProps = dispatch => ({\n  next: () => dispatch(nextIndexAction())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreenGame);\nScreenGame.propTypes = {\n  results: PropTypes.arrayOf(PropTypes.object).isRequired,\n  index: PropTypes.number.isRequired,\n  next: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/phlopes/Projetos/sd-010-a-project-trivia-react-redux/src/components/ScreenGame.jsx"],"names":["React","PropTypes","connect","Header","TriviaCard","nextIndexAction","ScreenGame","Component","constructor","verifyClicked","bind","state","clicked","setState","render","props","results","index","next","length","mapStateToProps","saveQuestions","questions","mapDispatchToProps","dispatch","propTypes","arrayOf","object","isRequired","number","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,eAAT,QAAgC,kBAAhC;;AAEA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAEDH,EAAAA,aAAa,GAAG;AACd,SAAKI,QAAL,CAAc;AAAED,MAAAA,OAAO,EAAE;AAAX,KAAd;AACD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,UACCF,OADD,GACa,KAAKD,KADlB,CACCC,OADD;AAAA,wBAE0B,KAAKG,KAF/B;AAAA,UAECC,OAFD,eAECA,OAFD;AAAA,UAEUC,KAFV,eAEUA,KAFV;AAAA,UAEiBC,IAFjB,eAEiBA,IAFjB;AAGP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGF,OAAO,CAACG,MAAR,GAAiB,CAAjB,IACC,oBAAC,UAAD;AACE,MAAA,aAAa,EAAG,KAAKV,aADvB;AAEE,MAAA,MAAM,EAAGO,OAAO,CAACC,KAAD,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAQGL,OAAO,IACN;AAAQ,qBAAY,UAApB;AAA+B,MAAA,IAAI,EAAC,QAApC;AAA6C,MAAA,OAAO,EAAG,MAAMM,IAAI,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATJ,CADF;AAgBD;;AAlCsC;;AAqCzC,MAAME,eAAe,GAAIT,KAAD,KAAY;AAClCK,EAAAA,OAAO,EAAEL,KAAK,CAACU,aAAN,CAAoBC,SADK;AAElCL,EAAAA,KAAK,EAAEN,KAAK,CAACU,aAAN,CAAoBJ;AAFO,CAAZ,CAAxB;;AAKA,MAAMM,kBAAkB,GAAIC,QAAD,KAAe;AACxCN,EAAAA,IAAI,EAAE,MAAMM,QAAQ,CAACnB,eAAe,EAAhB;AADoB,CAAf,CAA3B;;AAIA,eAAeH,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CjB,UAA7C,CAAf;AAEAA,UAAU,CAACmB,SAAX,GAAuB;AACrBT,EAAAA,OAAO,EAAEf,SAAS,CAACyB,OAAV,CAAkBzB,SAAS,CAAC0B,MAA5B,EAAoCC,UADxB;AAErBX,EAAAA,KAAK,EAAEhB,SAAS,CAAC4B,MAAV,CAAiBD,UAFH;AAGrBV,EAAAA,IAAI,EAAEjB,SAAS,CAAC6B,IAAV,CAAeF;AAHA,CAAvB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport TriviaCard from './TriviaCard';\nimport { nextIndexAction } from '../Redux/actions';\n\nclass ScreenGame extends React.Component {\n  constructor() {\n    super();\n\n    this.verifyClicked = this.verifyClicked.bind(this);\n\n    this.state = {\n      clicked: false,\n    };\n  }\n\n  verifyClicked() {\n    this.setState({ clicked: true });\n  }\n\n  render() {\n    const { clicked } = this.state;\n    const { results, index, next } = this.props;\n    return (\n      <div>\n        <Header />\n        {results.length > 0 && (\n          <TriviaCard\n            verifyClicked={ this.verifyClicked }\n            result={ results[index] }\n          />\n        )}\n        {clicked && (\n          <button data-testid=\"btn-next\" type=\"button\" onClick={ () => next() }>\n            Proximo\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  results: state.saveQuestions.questions,\n  index: state.saveQuestions.index,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  next: () => dispatch(nextIndexAction()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreenGame);\n\nScreenGame.propTypes = {\n  results: PropTypes.arrayOf(PropTypes.object).isRequired,\n  index: PropTypes.number.isRequired,\n  next: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}