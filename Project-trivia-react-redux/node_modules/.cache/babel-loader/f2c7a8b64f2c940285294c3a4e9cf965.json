{"ast":null,"code":"var _jsxFileName = \"/home/phlopes/Projetos/sd-010-a-project-trivia-react-redux/src/components/Ranking.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { resetQuestions, resetLogin, resetScore } from '../Redux/actions';\nimport '../styles/ranking.css';\n\nclass Ranking extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      ranking: []\n    };\n    this.updateState = this.updateState.bind(this);\n  }\n\n  componentDidMount() {\n    const currentStorage = JSON.parse(localStorage.getItem('ranking'));\n    this.updateState(currentStorage);\n  }\n\n  updateState(ranking) {\n    const rankingSorted = ranking.sort((a, b) => b.score - a.score);\n    this.setState({\n      ranking: rankingSorted\n    });\n  }\n\n  resetState() {\n    const _this$props = this.props,\n          resetQuestionsReducer = _this$props.resetQuestionsReducer,\n          resetLoginReducer = _this$props.resetLoginReducer,\n          resetScoreReducer = _this$props.resetScoreReducer;\n    resetQuestionsReducer();\n    resetLoginReducer();\n    resetScoreReducer();\n  }\n\n  render() {\n    const ranking = this.state.ranking;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"title-ranking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      \"data-testid\": \"ranking-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Ranking\")), React.createElement(\"table\", {\n      className: \"table-players\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Imagem\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Nome\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Pontua\\xE7\\xE3o\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, ranking.map((player, index) => React.createElement(\"tr\", {\n      key: `${player.name}-${index}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: player.picture,\n      alt: \"player\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      \"data-testid\": `player-name-${index}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, player.name), React.createElement(\"td\", {\n      \"data-testid\": `player-score-${index}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, player.score))))), React.createElement(\"div\", {\n      className: \"ranking-btn-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.resetState(),\n      type: \"button\",\n      \"data-testid\": \"btn-go-home\",\n      className: \"back-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Jogar Novamente\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  resetQuestionsReducer: () => dispatch(resetQuestions()),\n  resetLoginReducer: () => dispatch(resetLogin()),\n  resetScoreReducer: () => dispatch(resetScore())\n});\n\nexport default connect(null, mapDispatchToProps)(Ranking);\nRanking.propTypes = {\n  score: PropTypes.number,\n  picture: PropTypes.string,\n  name: PropTypes.string,\n  resetQuestionsReducer: PropTypes.func,\n  resetLoginReducer: PropTypes.func,\n  resetScoreReducer: PropTypes.func\n}.isRequired;","map":{"version":3,"sources":["/home/phlopes/Projetos/sd-010-a-project-trivia-react-redux/src/components/Ranking.jsx"],"names":["React","Link","connect","PropTypes","resetQuestions","resetLogin","resetScore","Ranking","Component","constructor","state","ranking","updateState","bind","componentDidMount","currentStorage","JSON","parse","localStorage","getItem","rankingSorted","sort","a","b","score","setState","resetState","props","resetQuestionsReducer","resetLoginReducer","resetScoreReducer","render","map","player","index","name","picture","mapDispatchToProps","dispatch","propTypes","number","string","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { resetQuestions, resetLogin, resetScore } from '../Redux/actions';\nimport '../styles/ranking.css';\n\nclass Ranking extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      ranking: [],\n    };\n    this.updateState = this.updateState.bind(this);\n  }\n\n  componentDidMount() {\n    const currentStorage = JSON.parse(localStorage.getItem('ranking'));\n    this.updateState(currentStorage);\n  }\n\n  updateState(ranking) {\n    const rankingSorted = ranking.sort((a, b) => b.score - a.score);\n    this.setState({ ranking: rankingSorted });\n  }\n\n  resetState() {\n    const { resetQuestionsReducer, resetLoginReducer, resetScoreReducer } = this.props;\n    resetQuestionsReducer();\n    resetLoginReducer();\n    resetScoreReducer();\n  }\n\n  render() {\n    const { ranking } = this.state;\n    return (\n      <>\n        <div className=\"title-ranking\">\n          <h1 data-testid=\"ranking-title\">Ranking</h1>\n        </div>\n        <table className=\"table-players\">\n          <thead>\n            <tr>\n              <th>Imagem</th>\n              <th>Nome</th>\n              <th>Pontuação</th>\n            </tr>\n          </thead>\n          <tbody>\n            {ranking.map((player, index) => (\n              <tr key={ `${player.name}-${index}` }>\n                <td><img src={ player.picture } alt=\"player\" /></td>\n                <td data-testid={ `player-name-${index}` }>{player.name}</td>\n                <td data-testid={ `player-score-${index}` }>{player.score}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <div className=\"ranking-btn-container\">\n          <Link to=\"/\">\n            <button\n              onClick={ () => this.resetState() }\n              type=\"button\"\n              data-testid=\"btn-go-home\"\n              className=\"back-btn\"\n            >\n              Jogar Novamente\n            </button>\n          </Link>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetQuestionsReducer: () => dispatch(resetQuestions()),\n  resetLoginReducer: () => dispatch(resetLogin()),\n  resetScoreReducer: () => dispatch(resetScore()),\n});\n\nexport default connect(null, mapDispatchToProps)(Ranking);\n\nRanking.propTypes = {\n  score: PropTypes.number,\n  picture: PropTypes.string,\n  name: PropTypes.string,\n  resetQuestionsReducer: PropTypes.func,\n  resetLoginReducer: PropTypes.func,\n  resetScoreReducer: PropTypes.func,\n}.isRequired;\n"]},"metadata":{},"sourceType":"module"}